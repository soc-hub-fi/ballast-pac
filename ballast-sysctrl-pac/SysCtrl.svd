<?xml version="1.0" encoding="UTF-8"?>
<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
	<vendor>tuni.fi</vendor>
	<name>ballast</name>
	<version>1.0</version>
	<description></description>
	<cpu>
		<name>other</name>
		<revision>r1p0</revision>
		<endian>little</endian>
		<mpuPresent>false</mpuPresent>
		<fpuPresent>false</fpuPresent>
		<nvicPrioBits>3</nvicPrioBits>
		<vendorSystickConfig>true</vendorSystickConfig>
	</cpu>
	<addressUnitBits>8</addressUnitBits>
	<width>32</width>
	<size>32</size>
	<peripherals>
		<peripheral>
			<name>C2C</name>
			<version>1.0</version>
			<baseAddress>0x40000000</baseAddress>
			<registers/>
		</peripheral>
		<peripheral>
			<name>MPC</name>
			<version>1.0</version>
			<baseAddress>0x20000000</baseAddress>
			<addressBlock>
				<offset>0x00101000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00104000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00109000</offset>
				<size>0x2000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00106000</offset>
				<size>0x3000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0010B000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00105000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00102000</offset>
				<size>0x2000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0010C000</offset>
				<size>0x3000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0010F000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00110000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>GPIO</name>
					<addressOffset>0x00101000</addressOffset>
					<register>
						<name>PADDIR_00_31</name>
						<description>Bit 31 - 0 DIR (R/W) GPIO[31:0] direction configuration bitfield:
- bit[i]=1’b0: Input mode for GPIO[i]
- bit[i]=1’b1: Output mode for GPIO[i]
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DIR</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>GPIOEN_00_31</name>
						<description>Bit 31 - 0 GPIOEN (R/W) GPIO[31:0] clock enable configuration bitfield:
- bit[i]=1’b0: disable clock for GPIO[i]
- bit[i]=1’b1: enable clock for GPIO[i]
GPIOs are gathered by groups of 4. The clock gating of one group is done only if
all 4 GPIOs are disabled.
Clock must be enabled for a GPIO if it’s direction is configured in input mode.</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>GPIOEN</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADIN_00_31</name>
						<description>Bit 31 - 0 DATA_IN (R) GPIO[31:0] input data read bitfield. DATA_IN[i] corresponds to
input data of GPIO[i].</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>DATA_IN</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADOUT_00_31</name>
						<description>Bit 31 - 0 DATA_OUT (R/W) GPIO[31:0] output data read bitfield. DATA_OUT[i] corresponds to output data set on GPIO[i].</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATA_OUT</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADOUTSET_00_31</name>
						<description>GPIO pad output set register</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADOUTSET</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADOUTCLR_00_31</name>
						<description>GPIO pad output clear register</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADOUTCLR</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTEN_00_31</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INTEN</name>
								<description>Bit 31 - 0 INTEN (R/W) GPIO[31:0] interrupt enable configuration bitfield:
- bit[i]=1’b0: disable interrupt for GPIO[i]
- bit[i]=1’b1: enable interrupt for GPIO[i]
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTTYPE_00_15</name>
						<description>Bit 31 - 0 INTTYPE0 (R/W) GPIO[15:0] interrupt type configuration bitfield:
- bit[2*i+1:2*i]=2’b00: interrupt on falling edge for GPIO[i]
- bit[2*i+1:2*i]=2’b01: interrupt on rising edge for GPIO[i]
- bit[2*i+1:2*i]=2’b10: interrupt on rising and falling edge for GPIO[i]
- bit[2*i+1:2*i]=2’b11: RFU
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INTTYPE0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTTYPE_16_31</name>
						<description>Bit 31 - 0 INTTYPE1 (R/W) GPIO[31:16] interrupt type configuration bitfield:
- bit[2*i+1:2*i]=2’b00: interrupt on falling edge for GPIO[16+i]
- bit[2*i+1:2*i]=2’b01: interrupt on rising edge for GPIO[16+i]
- bit[2*i+1:2*i]=2’b10: interrupt on rising and falling edge for GPIO[16+i]
- bit[2*i+1:2*i]=2’b11: RFU</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INTTYPE1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTSTATUS_00_31</name>
						<description>Bit 31 - 0 INTSTATUS (R) GPIO[31:0] Interrupt status flags bitfield. INTSTATUS[i]=1
when interrupt received on GPIO[i]. INTSTATUS is cleared when it is red. GPIO
interrupt line is also cleared when INTSTATUS register is red</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>INTSTATUS</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADCFG_00_07</name>
						<description>supports configuration for 4 PADS</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_CFG_0</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_1</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_2</name>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_3</name>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADCFG_56_63</name>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADCFG_56_63</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADCFG_48_55</name>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADCFG_48_55</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADCFG_40_47</name>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADCFG_40_47</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADCFG_32_39</name>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADCFG_32_39</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTSTATUS_32_63</name>
						<description>Bit 31 - 0 INTSTATUS (R) GPIO[63:32] Interrupt status flags bitfield. INTSTATUS[i]=1
when interrupt received on GPIO[i]. INTSTATUS is cleared when it is red. GPIO
interrupt line is also cleared when INTSTATUS register is red.</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>INTSTATUS</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTTYPE_48_63</name>
						<description>Bit 31 - 0 INTTYPE1 (R/W) GPIO[63:48] interrupt type configuration bitfield:
- bit[2*i+1:2*i]=2’b00: interrupt on falling edge for GPIO[16+i]
- bit[2*i+1:2*i]=2’b01: interrupt on rising edge for GPIO[16+i]
- bit[2*i+1:2*i]=2’b10: interrupt on rising and falling edge for GPIO[16+i]
- bit[2*i+1:2*i]=2’b11: RFU</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INTTYPE1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTTYPE_32_47</name>
						<description>Bit 31 - 0 INTTYPE0 (R/W) GPIO[47:32] interrupt type configuration bitfield:
- bit[2*i+1:2*i]=2’b00: interrupt on falling edge for GPIO[i]
- bit[2*i+1:2*i]=2’b01: interrupt on rising edge for GPIO[i]
- bit[2*i+1:2*i]=2’b10: interrupt on rising and falling edge for GPIO[i]
- bit[2*i+1:2*i]=2’b11: RFU
</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INTTYPE0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTEN_32_63</name>
						<description>Bit 31 - 0 INTEN (R/W) GPIO[63:32] interrupt enable configuration bitfield:
- bit[i]=1’b0: disable interrupt for GPIO[i]
- bit[i]=1’b1: enable interrupt for GPIO[i]
</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INTEN</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADOUTCLR_32_63</name>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADOUTCLR</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADOUTSET_32_63</name>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADOUTSET</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADOUT_32_63</name>
						<description>Bit 31 - 0 DATA_OUT (R/W) GPIO[63:32] output data read bitfield. DATA_OUT[i] corresponds to output data set on GPIO[i]</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATA_OUT</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADIN_32_63</name>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>DATA_IN</name>
								<description>Bit 31 - 0 DATA_IN (R) GPIO[63:32] input data read bitfield. DATA_IN[i] corresponds to
input data of GPIO[i].
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>GPIOEN_32_63</name>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>GPIOEN_32_63</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADDIR_32_63</name>
						<description>Bit 31 - 0 DIR (R/W) GPIO[63:32] direction configuration bitfield:
- bit[i]=1’b0: Input mode for GPIO[i]
- bit[i]=1’b1: Output mode for GPIO[i]</description>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DIR</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADCFG_08_15</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADCFG_08_15</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADCFG_16_23</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADCFG_16_23</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PADCFG_24_31</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PADCFG_24_31</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>SocControl</name>
					<addressOffset>0x00104000</addressOffset>
					<register>
						<name>INFO</name>
						<description>This register holds the number of clusters and the number of cores in the each
cluster.
 It is a read-only register.
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>cluster_count</name>
								<description>Number of Clusters </description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>core_count</name>
								<description>Number of Cores</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>BOOT_ADR</name>
						<description>This register holds the boot address.</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x1A100000</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>BOOT_ADR</name>
								<description>Note!  Reset value</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FETCH_ENABLE</name>
						<description>This register contains the value of the fetch enable signal of the core.
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>E</name>
								<description>Enable Fetch</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_MUX_0</name>
						<description>The content of these registers can be used to multiplex pads when targeting an ASIC. 

The first register (0x1A10_4010) can be used to set the mux (2 bit
select) from pin 0 (bits [1:0]) to 15 (bits [31:30]).</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pad_0</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>pad_1</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>pad_2</name>
								<bitRange>[5:4]</bitRange>
							</field>
							<field>
								<name>pad_3</name>
								<bitRange>[7:6]</bitRange>
							</field>
							<field>
								<name>pad_4</name>
								<bitRange>[9:8]</bitRange>
							</field>
							<field>
								<name>pad_5</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>pad_6</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>pad_7</name>
								<bitRange>[15:14]</bitRange>
							</field>
							<field>
								<name>pad_8</name>
								<bitRange>[17:16]</bitRange>
							</field>
							<field>
								<name>pad_9</name>
								<bitRange>[19:18]</bitRange>
							</field>
							<field>
								<name>pad_10</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>pad_11</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>pad_12</name>
								<bitRange>[25:24]</bitRange>
							</field>
							<field>
								<name>pad_13</name>
								<bitRange>[27:26]</bitRange>
							</field>
							<field>
								<name>pad_14</name>
								<bitRange>[29:28]</bitRange>
							</field>
							<field>
								<name>pad_15</name>
								<bitRange>[31:30]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_MUX_1</name>
						<description>The content of these registers can be used to multiplex pads when targeting an ASIC.

The second register (0x1A10_4014)
can be used to sets the mux (2 bit select) from pin 16 (bits [1:0]) to 31 (bits [31:30]).</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pad_16</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>pad_17</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>pad_18</name>
								<bitRange>[5:4]</bitRange>
							</field>
							<field>
								<name>pad_19</name>
								<bitRange>[7:6]</bitRange>
							</field>
							<field>
								<name>pad_20</name>
								<bitRange>[9:8]</bitRange>
							</field>
							<field>
								<name>pad_21</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>pad_22</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>pad_23</name>
								<bitRange>[15:14]</bitRange>
							</field>
							<field>
								<name>pad_24</name>
								<bitRange>[17:16]</bitRange>
							</field>
							<field>
								<name>pad_25</name>
								<bitRange>[19:18]</bitRange>
							</field>
							<field>
								<name>pad_26</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>pad_27</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>pad_28</name>
								<bitRange>[25:24]</bitRange>
							</field>
							<field>
								<name>pad_29</name>
								<bitRange>[27:26]</bitRange>
							</field>
							<field>
								<name>pad_30</name>
								<bitRange>[29:28]</bitRange>
							</field>
							<field>
								<name>pad_31</name>
								<bitRange>[31:30]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_MUX_2</name>
						<description>The content of these registers can be used to multiplex pads when targeting an ASIC.

The third register (0x1A10_4018) can be used to sets the mux (2 bit select) from pin 32 (bits [1:0]) to 47 (bits [31:30]). </description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pad_32</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>pad_33</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>pad_34</name>
								<bitRange>[5:4]</bitRange>
							</field>
							<field>
								<name>pad_35</name>
								<bitRange>[7:6]</bitRange>
							</field>
							<field>
								<name>pad_36</name>
								<bitRange>[9:8]</bitRange>
							</field>
							<field>
								<name>pad_37</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>pad_38</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>pad_39</name>
								<bitRange>[15:14]</bitRange>
							</field>
							<field>
								<name>pad_40</name>
								<bitRange>[17:16]</bitRange>
							</field>
							<field>
								<name>pad_41</name>
								<bitRange>[19:18]</bitRange>
							</field>
							<field>
								<name>pad_42</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>pad_43</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>pad_44</name>
								<bitRange>[25:24]</bitRange>
							</field>
							<field>
								<name>pad_45</name>
								<bitRange>[27:26]</bitRange>
							</field>
							<field>
								<name>pad_46</name>
								<bitRange>[29:28]</bitRange>
							</field>
							<field>
								<name>pad_47</name>
								<bitRange>[31:30]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_MUX_3</name>
						<description>The content of these registers can be used to multiplex pads when targeting an ASIC.

The forth register (0x1A10_401C) can be used to
sets the mux (2 bit select) from pin 48 (bits [1:0]) to 63 (bits [31:30]).
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pad_48</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>pad_49</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>pad_50</name>
								<bitRange>[5:4]</bitRange>
							</field>
							<field>
								<name>pad_51</name>
								<bitRange>[7:6]</bitRange>
							</field>
							<field>
								<name>pad_52</name>
								<bitRange>[9:8]</bitRange>
							</field>
							<field>
								<name>pad_53</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>pad_54</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>pad_55</name>
								<bitRange>[15:14]</bitRange>
							</field>
							<field>
								<name>pad_56</name>
								<bitRange>[17:16]</bitRange>
							</field>
							<field>
								<name>pad_57</name>
								<bitRange>[19:18]</bitRange>
							</field>
							<field>
								<name>pad_58</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>pad_59</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>pad_60</name>
								<bitRange>[25:24]</bitRange>
							</field>
							<field>
								<name>pad_61</name>
								<bitRange>[27:26]</bitRange>
							</field>
							<field>
								<name>pad_62</name>
								<bitRange>[29:28]</bitRange>
							</field>
							<field>
								<name>pad_63</name>
								<bitRange>[31:30]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_0</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_0</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_1</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_2</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_1</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_3</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_4</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_5</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_2</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_6</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_7</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_8</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_3</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_9</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_10</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_11</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_4</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_12</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_13</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_14</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_5</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_15</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_16</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_17</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_6</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_18</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_19</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_20</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_7</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_21</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_22</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_23</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_8</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_24</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_25</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_26</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_9</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_27</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_28</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_29</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_10</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_30</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_31</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_32</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_11</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_33</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_34</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_35</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_12</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_36</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_37</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_38</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_13</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_39</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_40</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_41</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_14</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_42</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>PAD_43</name>
								<bitRange>[19:10]</bitRange>
							</field>
							<field>
								<name>PAD_44</name>
								<bitRange>[29:20]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FLL_CLOCK_SELECT</name>
						<description>This register contains whether the system clock is coming from
the FLL or the FLL is bypassed. It is a read-only register by the core but it can be written via JTAG.</description>
						<addressOffset>0x00C8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>S</name>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CORE_STATUS_0</name>
						<description>2 Core Status registers contain the status of the system for testing/verification purposes like End Of Computation.

The 0x1A10_40C0 register is read-only.</description>
						<addressOffset>0x00A0</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>CORE_STATUS</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_15</name>
						<description>Pad configuration registers can be used for ASIC targets to configure pads,
e.g. pull up, pull down values.
</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_CFG</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CORE_STATUS_1</name>
						<description>2 Core Status registers contain the status of the system for testing/verification purposes like End Of Computation.

The 0x1A10_40C0 register is read-only.</description>
						<addressOffset>0x00C0</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CORE_STATUS_1</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>JTAG_REG</name>
						<description>This register contains the value of the input from the JTAG and
can be used to write 8bit in the JTAG output register for system-to-JTAG communications.</description>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>JTAG_REG_OUT</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>JTAG_REG_IN</name>
								<bitRange>[15:8]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>EventInterruptUnit</name>
					<addressOffset>0x00109000</addressOffset>
					<register>
						<name>MASK_read</name>
						<description>This register contains the MASK (interrupt enable) for each of the 32 interrupts or events.

Writing to 0x1A10_9004 sets the bits of the MASK register selected
Writing to 0x1A10_9008 clears the bits of the MASK register selected.
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>MASK</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MASK_set</name>
						<description>This register contains the MASK (interrupt enable) for each of the 32 interrupts or events. Writing to 0x1A10_9004 sets the bits of the MASK register selected.
Writing to 0x1A10_9008 clears the bits of the MASK register selected.
</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>MASK_set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MASK_clear</name>
						<description>This register contains the MASK (interrupt enable) for each of the 32 interrupts or events. Writing to 0x1A10_9004 sets the bits of the MASK register selected.
Writing to 0x1A10_9008 clears the bits of the MASK register selected.
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>MASK_clear</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INT_read</name>
						<description>This register contains the pending interrupts or events. Writing to 0x1A10_9010
sets the bits of the INT register selected. Writing to 0x1A10_9014 clears the bits of
the INT register selected.</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>INT_read</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INT_set</name>
						<description>INT_read</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>INT_set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INT_clear</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>INT_clear</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ACK_read</name>
						<description>This register contains the ACK (interrupt enable) for each of the 32 interrupts
or events. Writing to 0x1A10_901C sets the bits of the ACK register selected. Writing
to 0x1A10_9020 clears the bits of the ACK register selected.
</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>ACK_read</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ACK_set</name>
						<description>This register contains the ACK (interrupt enable) for each of the 32 interrupts
or events. Writing to 0x1A10_901C sets the bits of the ACK register selected. Writing
to 0x1A10_9020 clears the bits of the ACK register selected.
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>ACK_set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ACK_clear</name>
						<description>This register contains the ACK (interrupt enable) for each of the 32 interrupts
or events. Writing to 0x1A10_901C sets the bits of the ACK register selected. Writing
to 0x1A10_9020 clears the bits of the ACK register selected.
</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>ACK_clear</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FIFO_DATA</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>FIFO_DATA</name>
								<description>This is a read-only register that contain the first valid value of the FIFO</description>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>SocEventGenerator</name>
					<addressOffset>0x00106000</addressOffset>
					<register>
						<name>SW_EVENT</name>
						<description>SoC software events trigger
register</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>EVENT</name>
								<description>Writing a one-hot value into EVENT triggers a SoC software event. 8 software events are available.
</description>
								<bitRange>[7:0]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK0</name>
						<description>Events 0-31 dispatch mask
to FC

</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK0</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK1</name>
						<description>Events 32-63 dispatch mask
to FC</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK1</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK2</name>
						<description>Events 64-95 dispatch mask
to FC</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK2</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK3</name>
						<description>Events 96-127 dispatch
mask to FC</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK3</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK4</name>
						<description>Events 128-159 dispatch
mask to FC</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK4</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK5</name>
						<description>Events 160-191 dispatch
mask to FC</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK5</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK6</name>
						<description>Events 191-223 dispatch mask to FC
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK6</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK7</name>
						<description>F Events 224-255 dispatch
mask to peripherals
</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK7</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK0</name>
						<description>Events 0-31 dispatch mask to peripherals</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK1</name>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK1</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK2</name>
						<description>Events 0-31 dispatch mask to peripheralsEvents 64-95 dispatch mask to peripherals</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK2</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK3</name>
						<description>Events 96-127 dispatch mask to peripherals
</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK3</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK4</name>
						<description>Events 128-159 dispatch mask to peripheral</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK4</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK5</name>
						<description>Events 160-191 dispatch
mask to peripherals</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK5</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK6</name>
						<description>Events 191-223 dispatch mask to peripherals</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK6</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK7</name>
						<description>Events 224-255 dispatch mask to peripherals
</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK7</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR0</name>
						<description>Events 0-31 event queue
overflow</description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR0</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR1</name>
						<description>Events 32-63 event queue
overflow</description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR1</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR2</name>
						<description>Events 64-95 event queue
overflow</description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR02</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR3</name>
						<description>Events 96-127 event queue
overflow</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR3</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR4</name>
						<description>Events 128-159 event queue
overflow</description>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR4</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR5</name>
						<description>Events 160-191 event queue
overflow</description>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR5</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR6</name>
						<description>Events 191-223 event queue
overflow</description>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR6</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR7</name>
						<description>Events 224-255 event queue overflow
</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR7</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TIMER_LO</name>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>TIMER_LO_EVENT</name>
								<description>Trigger and start APB Timer LO by the event with id
that equals TIMER_LO_EVENT
</description>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TIMER_HI</name>
						<description>Trigger Timer HI of APB
Timer with event</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>TIMER_HI_EVENT</name>
								<description>Trigger and start APB Timer HI by the event with id
that equals TIMER_HI_EVENT
</description>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Timer</name>
					<addressOffset>0x0010B000</addressOffset>
					<register>
						<name>CFG_LO</name>
						<description>Timer Low Configuration register
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EN</name>
								<description>Timer enable (starts couting) bit
</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>RST</name>
								<description>Timer low reset, cleared after the reset happened
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>IRQEN</name>
								<description>Timer low interrupt generation on compare match enable</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>Timer low continuous mode configuration

0b0: Continue incrementing timer low counter after a compare match with CMP_LO

0b1: Reset timer to after a compare match with CMP_LO
</description>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>ONES</name>
								<description>Timer low one shot configuration</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PEN</name>
								<description>Timer low prescaler enable bit</description>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>CCFG</name>
								<description>Timer low clock source configuration

0b0: FLL or FLL plus Prescaler
0b1: 32 kHz reference clock</description>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PVAL</name>
								<description>Timer low prescaler value. ftimer = fclk/(1 + P V AL)</description>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>CASC</name>
								<description> Timer low and Timer high 64-bit cascaded mode enable bit</description>
								<bitRange>[31:31]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CFG_HI</name>
						<description>Timer High Configuration
register</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EN</name>
								<description>Timer enable (starts couting) bit
</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>RST</name>
								<description>Timer high reset, cleared after the reset happened
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>IRQEN</name>
								<description>Timer hi interrupt generation on compare match enable</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>Timer hi continuous mode configuration

0b0: Continue incrementing timer hi counter after a compare match with CMP_HI

0b1: Reset timer to after a compare match with CMP_HI
</description>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>ONES</name>
								<description>Timer hi one shot configuration</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PEN</name>
								<description>Timer hi prescaler enable bit</description>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>CCFG</name>
								<description>Timer hi clock source configuration

0b0: FLL or FLL plus Prescaler
0b1: 32 kHz reference clock</description>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PVAL</name>
								<description>Timer hi prescaler value. ftimer = fclk/(1 + PVAL)</description>
								<bitRange>[15:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CNT_LO</name>
						<description>Timer Low counter value register</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CNT_LO</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CNT_HI</name>
						<description>Timer High counter value register</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CNT_HI</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CMP_LO</name>
						<description>Timer Low comparator value register
</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMP_LO</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CMP_HI</name>
						<description>Timer High comparator value register</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMP_HI</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>START_LO</name>
						<description>Start Timer Low counting register</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START_LO</name>
								<description>Timer high start command (sets EN in CFG_LO)</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>START_HI</name>
						<description>Start Timer High counting register
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START_HI</name>
								<description>Timer high reset command (writes RST in CFG_LO)</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RESET_LO</name>
						<description>Reset Timer Low counter register</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RESET_LO</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RESET_HI</name>
						<description>Reset Timer High counter register</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RESET_HI</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>AdvancedTimer</name>
					<addressOffset>0x00105000</addressOffset>
					<register>
						<name>T0_CMD</name>
						<description>ADV_TIMER0 command register</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER0 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER0 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER0 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER0 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER0 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_CONFIG</name>
						<description>ADV_TIMER0 configuration register.</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER0 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER0 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER0 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER0 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER0 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_THRESHOLD</name>
						<description>ADV_TIMER0 threshold configuration register.
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER0 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER0 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL0</name>
						<description>ADV_TIMER0 channel 0 threshold configuration register</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL1</name>
						<description>ADV_TIMER0 channel 1 threshold configuration register</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL2</name>
						<description>ADV_TIMER0 channel 2 threshold configuration register</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 2 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 2 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL3</name>
						<description>ADV_TIMER0 channel 3 threshold configuration register</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_COUNTER</name>
						<description>ADV_TIMER0 counter register</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>T0_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_CMD</name>
						<description>ADV_TIMER1 command register</description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER1 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER1 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER1 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER1 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER1 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_CONFIG</name>
						<description>ADV_TIMER1 configuration register</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER1 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER1 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER1 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER1 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER1 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_THRESHOLD</name>
						<description>ADV_TIMER1 threshold configuration register</description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER1 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER1 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL0</name>
						<description>ADV_TIMER1 channel 0 threshold configuration register</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER1 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER1 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL1</name>
						<description>ADV_TIMER1 channel 1 threshold configuration register</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER1 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER1 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL2</name>
						<description>ADV_TIMER1 channel 2 threshold configuration register</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL3</name>
						<description>ADV_TIMER1 channel 3 threshold configuration register</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER1 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER1 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_COUNTER</name>
						<description>ADV_TIMER1 counter register</description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>T1_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_CMD</name>
						<description>ADV_TIMER2 command register</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER2 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER2 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER2 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER2 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER2 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_CONFIG</name>
						<description>ADV_TIMER2 configuration register</description>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER2 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER2 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER2 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER2 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER2 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_THRESHOLD</name>
						<description>ADV_TIMER2 threshold configuration register</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER2 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER2 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL0</name>
						<description>ADV_TIMER2 channel 0 threshold configuration register</description>
						<addressOffset>0x008C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL1</name>
						<description>ADV_TIMER2 channel 1 threshold configuration register</description>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL2</name>
						<description>ADV_TIMER2 channel 2 threshold configuration register</description>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 2 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 2 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL3</name>
						<description>ADV_TIMER2 channel 3 threshold configuration register</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_COUNTER</name>
						<description>ADV_TIMER2 counter register</description>
						<addressOffset>0x00AC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>T2_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_CMD</name>
						<description>ADV_TIMER3 command register</description>
						<addressOffset>0x00C0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER3 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER3 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER3 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER3 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER3 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_CONFIG</name>
						<description>ADV_TIMER3 configuration register</description>
						<addressOffset>0x00C4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER3 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER3 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER3 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER3 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER3 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_THRESHOLD</name>
						<description>ADV_TIMER3 threshold configuration register</description>
						<addressOffset>0x00C8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER3 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER3 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL0</name>
						<description>ADV_TIMER3 channel 0 threshold configuration register</description>
						<addressOffset>0x00CC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL1</name>
						<description>ADV_TIMER3 channel 1 threshold configuration register</description>
						<addressOffset>0x00D0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL2</name>
						<description>ADV_TIMER3 channel 2 threshold configuration register</description>
						<addressOffset>0x00D4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 2 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 2 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL3</name>
						<description>ADV_TIMER3 channel 3 threshold configuration register</description>
						<addressOffset>0x00D8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_COUNTER</name>
						<description>ADV_TIMER3 counter register</description>
						<addressOffset>0x00EC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>T3_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>EVENT_CFG</name>
						<description>ADV_TIMERS events configuration register.</description>
						<addressOffset>0x0100</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EVENT_CFG</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CG</name>
						<description>ADV_TIMERS channels clock gating configuration register.
</description>
						<addressOffset>0x0104</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ENA</name>
								<description>ADV_TIMER clock gating configuration bitfield.
- ENA[i]=0: clock gate ADV_TIMERi.
- ENA[i]=1: enable ADV_TIMERi.</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>UDMA</name>
					<addressOffset>0x00102000</addressOffset>
					<register>
						<name>CTRL_CFG_CG</name>
						<description>uDMA peripherals clock gate configuration

Bitfields Defines uDMA peripherals clock gate configuration for corresponding peripheral</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CG_UART</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>CG_SPIM</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>CG_I2C0</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>CG_I2C1</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>CG_SDIO</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>CG_I2S</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>CG_CAM</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>CG_FILTER</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CTRL_CFG_EVENT</name>
						<description>uDMA peripherals external event configuration
</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMP_EVT0</name>
								<description> Forward event with ID matching CMP_EVT0 to peripherals as
event0
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>CMP_EVT1</name>
								<description>Forward event with ID matching CMP_EVT1 to peripherals as
event1
</description>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>CMP_EVT2</name>
								<description>Forward event with ID matching CMP_EVT2 to peripherals as
event2</description>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>CMP_EVT3</name>
								<description>Forward event with ID matching CMP_EVT3 to peripherals as
event3</description>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CTRL_CFG_RST</name>
						<description>uDMA peripherals reset trigger (unimplemented)
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CTRL_CFG_RST</name>
								<description>uDMA peripherals reset trigger
(unimplemented)
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_RX_SADDR</name>
						<description>uDMA RX UART buffer
base address configuration
register</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SADDR</name>
								<description> RX buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets RX buffer base address
</description>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_RX_SIZE</name>
						<description>uDMA RX UART buffer size configuration register</description>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SIZE</name>
								<description> RX buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.</description>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_RX_CFG</name>
						<description>uDMA RX UART stream
configuration register</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>RX channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>RX channel enable and start transfer bitfield:
-1'b0: disable
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>RX channel clear and stop transfer:
-1'b0: disable
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_TX_SADDR</name>
						<description>uDMA TX UART buffer
base address configuration
register.</description>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SADDR</name>
								<description>TX buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets buffer base address
</description>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_TX_SIZE</name>
						<description>uDMA TX UART buffer
size configuration register</description>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SIZE</name>
								<description>TX buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.
</description>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_TX_CFG</name>
						<description>uDMA TX UART stream
configuration register.</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description> TX channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>TX channel enable and start transfer bitfield:
-1'b0: disabled
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>TX transfer pending in queue status flag:
-1'b0: no pending transfer in the queue
-1'b1: pending transfer in the queue
</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>RX channel clear and stop transfer:
-1'b0: disable
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_ERROR</name>
						<description>uDMA UART Error status</description>
						<addressOffset>0x00A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RX_ERR_OVERFLOW</name>
								<description>RX overflow error status flag:
- 1'b0: no error
- 1'b1: RX overflow error occurred
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RX_ERR_PARITY</name>
								<description>RX parity error status flag:
- 1'b0: no error
- 1'b1: RX parity error occurred</description>
								<bitRange>[1:1]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_RX_SIZE</name>
						<description>RX SPI uDMA
transfer size of
buffer</description>
						<addressOffset>0x0104</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-writeOnce</access>
						<fields>
							<field>
								<name>RX_SIZE</name>
								<description>Buffer size in bytes. (1MBytes maximum)
- Read: buffer size left
- Write: set buffer size
</description>
								<bitRange>[19:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_DATA</name>
						<description>RX read data for polling or interrupt</description>
						<addressOffset>0x00B4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>BYTE</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_RX_SADDR</name>
						<description>RX SPI uDMA
transfer address of
associated buffer</description>
						<addressOffset>0x0100</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address
</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_STATUS</name>
						<description>uDMA UART status register</description>
						<addressOffset>0x00A0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>TX_BUSY</name>
								<description>TX busy status flag:
- 1'b0: no TX transfer on-going
- 1'b1: TX transfer on-going</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RX_BUSY</name>
								<description>RX busy status flag:
- 1'b0: no RX transfer on-going
- 1'b1: RX transfer on-going
</description>
								<bitRange>[1:1]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_IRQ_EN</name>
						<description>uDMA UART Read or Error interrupt enable register</description>
						<addressOffset>0x00AC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX</name>
								<description>Rx interrupt in enable flag:
- 1'b0: RX IRQ disable
- 1'b1: RX IRQ enable
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ERROR</name>
								<description>Error interrupt in enable flag:
- 1'b0: Error IRQ disable
- 1'b1: Error IRQ enable
</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_VALID</name>
						<description>uDMA UART Read polling
data valid flag register</description>
						<addressOffset>0x00B0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>READY</name>
								<description>Used only in RX polling method to indicate data is ready for read:
- 1'b0: Data is not ready to read
- 1'b1: Data is ready to read</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_CMD_SADDR</name>
						<description>CMD SPI uDMA
transfer address of
associated buffer</description>
						<addressOffset>0x0120</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMD_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_TX_SADDR</name>
						<description>TX SPI uDMA
transfer address of
associated buffer</description>
						<addressOffset>0x0110</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_CMD_SIZE</name>
						<description>CMD SPI uDMA
transfer size of
buffer</description>
						<addressOffset>0x0124</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMD_SIZE</name>
								<description>Buffer size in bytes. (1MBytes maximum)
- Read: buffer size left
- Write: set buffer size
</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_TX_SIZE</name>
						<description>TX SPI uDMA
transfer size of
buffer</description>
						<addressOffset>0x0114</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SIZE</name>
								<description>Buffer size in bytes. (1MBytes maximum)
- Read: buffer size left
- Write: set buffer size
</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_TX_SADDR</name>
						<description>uDMA TX I2C buffer
base address configuration register.</description>
						<addressOffset>0x0190</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SADDR</name>
								<description>TX buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets buffer base address
</description>
								<bitRange>[20:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_SETUP</name>
						<description>uDMA I2C Configuration register.</description>
						<addressOffset>0x01B4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DO_RST</name>
								<description>Reset command used to abort the on-going transfer and clear busy and
arbitration lost status flags.
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_CMD_CFG</name>
						<description>uDMA CMD I2C stream configuration register.</description>
						<addressOffset>0x01A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>CMD channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description> CMD channel enable and start transfer bitfield:
-1'b0: disabled
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>CMD transfer pending in queue status flag:
-1'b0: no pending transfer in the queue
-1'b1: pending transfer in the queue
</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>CMD channel clear and stop transfer bitfield:
-1'b0: disabled
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_CMD_SADDR</name>
						<description>uDMA CMD I2C buffer
base address configuration register.
</description>
						<addressOffset>0x01A0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMD_SADDR</name>
								<description>CMD buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets buffer base address
</description>
								<bitRange>[20:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_TX_SIZE</name>
						<description>uDMA TX I2C buffer size
configuration register</description>
						<addressOffset>0x0194</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SIZE</name>
								<description>TX buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.</description>
								<bitRange>[19:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_RX_SIZE</name>
						<description>uDMA RX I2C buffer size
configuration register</description>
						<addressOffset>0x0184</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SIZE</name>
								<description>RX buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_CMD_CFG</name>
						<description>CMD SPI uDMA
transfer configuration</description>
						<addressOffset>0x0128</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_SETUP</name>
						<description>UDMA UART configuration register.</description>
						<addressOffset>0x00A4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PARITY_ENA</name>
								<description>Parity bit generation and check configuration bitfield:
- 1'b0: disabled
- 1'b1: enabled
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>BIT_LENGTH</name>
								<description>Character length bitfield:
- 2'b00: 5 bits
- 2'b01: 6 bits
- 2'b10: 7 bits
- 2'b11: 8 bits
</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>5BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>6BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>7BITS</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>8BITS</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>STOP_BITS</name>
								<description> Stop bits length bitfield:
- 1'b0: 1 stop bit
- 1'b1: 2 stop bits
</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>POLLING_EN</name>
								<description>When in uart read, use polling method to read the data, read
interrupt enable flag will be ignored:
- 1'b0: Do not using polling method to read data.
- 1'b1: Using polling method to read data. Interrupt enable flag will be ignored.</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>CLEAN_FIFO</name>
								<description>In all mode clean the RX fifo, set 1 then set 0 to realize a reset
fifo:
- 1'b0: Stop Clean the RX FIFO.
- 1'b1: Clean the RX FIFO.</description>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>TX_ENA</name>
								<description> TX transceiver configuration bitfield:
- 1'b0: disabled
- 1'b1: enabled
</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>RX_ENA</name>
								<description>RX transceiver configuration bitfield:
- 1'b0: disabled
- 1'b1: enabled</description>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>CLKDIV</name>
								<description>UART Clock divider configuration bitfield. The baudrate is equal to
SOC_FREQ/CLKDIV.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_TX_CFG</name>
						<description>TX SPI uDMA
transfer configuration</description>
						<addressOffset>0x0118</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_STATUS</name>
						<description>uDMA I2C Status register</description>
						<addressOffset>0x01B0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BUSY</name>
								<description>I2C bus busy status flag:
- 1'b0: no transfer on-going
- 1'b1: transfer on-going</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ARB_LOST</name>
								<description>I2C arbitration lost status flag:
- 1'b0: no error
- 1'b1: arbitration lost error</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ACK</name>
								<description>I2C ack flag, can be polling for busy:
- 1'b0: ACK
- 1'b1: NAK
</description>
								<bitRange>[2:2]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_CMD_SIZE</name>
						<description>uDMA CMD I2C buffer size configuration register</description>
						<addressOffset>0x01A4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMD_SIZE</name>
								<description>CMD buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.
</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_TX_CFG</name>
						<description>uDMA TX I2C stream
configuration register</description>
						<addressOffset>0x0198</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>TX channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>TX channel enable and start transfer bitfield:
-1'b0: disable
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>TX transfer pending in queue status flag:
-1'b0: no pending transfer in the queue
-1'b1: pending transfer in the queue
</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>TX channel clear and stop transfer bitfield:
-1'b0: disabled
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_RX_CFG</name>
						<description>uDMA RX I2C stream
configuration register.</description>
						<addressOffset>0x0188</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>RX channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>RX channel enable and start transfer bitfield:
-1'b0: disable
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>RX channel clear and stop transfer:
-1'b0: disable
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C0_RX_SADDR</name>
						<description>uDMA RX I2C buffer
base address configuration register.</description>
						<addressOffset>0x0180</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SADDR</name>
								<description>RX buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets RX buffer base address
</description>
								<bitRange>[20:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_RX_CFG</name>
						<description>RX SPI uDMA
transfer configuration</description>
						<addressOffset>0x0108</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_RX_SADDR</name>
						<description>uDMA RX I2C buffer
base address configuration register.</description>
						<addressOffset>0x0200</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SADDR</name>
								<description>RX buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets RX buffer base address
</description>
								<bitRange>[20:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_RX_SIZE</name>
						<description>uDMA RX I2C buffer size
configuration register</description>
						<addressOffset>0x0204</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SIZE</name>
								<description>RX buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_RX_CFG</name>
						<description>uDMA RX I2C stream
configuration register.</description>
						<addressOffset>0x0208</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>RX channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>RX channel enable and start transfer bitfield:
-1'b0: disable
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>RX channel clear and stop transfer:
-1'b0: disable
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_TX_SADDR</name>
						<description>uDMA TX I2C buffer
base address configuration register.</description>
						<addressOffset>0x0210</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SADDR</name>
								<description>TX buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets buffer base address
</description>
								<bitRange>[20:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_TX_SIZE</name>
						<description>uDMA TX I2C buffer size
configuration register</description>
						<addressOffset>0x0214</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SIZE</name>
								<description>TX buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.</description>
								<bitRange>[19:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_TX_CFG</name>
						<description>uDMA TX I2C stream
configuration register</description>
						<addressOffset>0x0218</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>TX channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>TX channel enable and start transfer bitfield:
-1'b0: disable
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>TX transfer pending in queue status flag:
-1'b0: no pending transfer in the queue
-1'b1: pending transfer in the queue
</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>TX channel clear and stop transfer bitfield:
-1'b0: disabled
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_CMD_SADDR</name>
						<description>uDMA CMD I2C buffer
base address configuration register.
</description>
						<addressOffset>0x0220</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMD_SADDR</name>
								<description>CMD buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets buffer base address
</description>
								<bitRange>[20:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_CMD_SIZE</name>
						<description>uDMA CMD I2C buffer size configuration register</description>
						<addressOffset>0x0224</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMD_SIZE</name>
								<description>CMD buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.
</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_CMD_CFG</name>
						<description>uDMA CMD I2C stream configuration register.</description>
						<addressOffset>0x0228</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>CMD channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description> CMD channel enable and start transfer bitfield:
-1'b0: disabled
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>CMD transfer pending in queue status flag:
-1'b0: no pending transfer in the queue
-1'b1: pending transfer in the queue
</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>CMD channel clear and stop transfer bitfield:
-1'b0: disabled
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_STATUS</name>
						<description>uDMA I2C Status register</description>
						<addressOffset>0x0230</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BUSY</name>
								<description>I2C bus busy status flag:
- 1'b0: no transfer on-going
- 1'b1: transfer on-going</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ARB_LOST</name>
								<description>I2C arbitration lost status flag:
- 1'b0: no error
- 1'b1: arbitration lost error</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ACK</name>
								<description>I2C ack flag, can be polling for busy:
- 1'b0: ACK
- 1'b1: NAK
</description>
								<bitRange>[2:2]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CAM_CFG_FILTER</name>
						<description>RGB coefficients configuration register</description>
						<addressOffset>0x03B0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>B_COEFF</name>
								<description>Coefficient that multiplies the B component
NOTE: not used if FORMAT == BYPASS
</description>
								<bitRange>[7:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>G_COEFF</name>
								<description>Coefficient that multiplies the G component
NOTE: not used if FORMAT == BYPASS
</description>
								<bitRange>[15:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>R_COEFF</name>
								<description>Coefficient that multiplies the R component
NOTE: not used if FORMAT == BYPASS
</description>
								<bitRange>[23:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CAM_CFG_UR</name>
						<description>Upper Right corner configuration register</description>
						<addressOffset>0x03A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FRAMESLICE_URX</name>
								<description>Y coordinate of upper right corner of slice</description>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>FRAMESLICE_URY</name>
								<description>X coordinate of upper right corner of slice</description>
								<bitRange>[31:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CAM_CFG_GLOB</name>
						<description>Global configuration register</description>
						<addressOffset>0x03A0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FRAMEDROP_EN</name>
								<description>Frame dropping:</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>FRAMEDROP_VAL</name>
								<description>) Sets how many frames should be dropped after each received</description>
								<bitRange>[6:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>FRAMESLICE_EN</name>
								<description>nput frame slicing:
- 1'b0: disable
- 1'b1: enabl</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>FORMAT</name>
								<description> Input frame format:
- 3'b000: RGB565
- 3'b001: RGB555
- 3'b010: RGB444
- 3'b100: BYPASS_LITEND
- 3'b101: BYPASS_BIGEND
</description>
								<bitRange>[10:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>RGB565</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RGB555</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RGB444</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>BYPASS_LITEND</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>BYPASS_BIGEND</name>
										<value>5</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>SHIFT</name>
								<description>Right shift of final pixel value (DivFactor)
NOTE: not used if FORMAT == BYPASS
</description>
								<bitRange>[14:11]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description> Enable data rx from camera interface.
The enable/disable happens only at the start of a frame.
- 1'b0: disable
- 1'b1: enable
</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CAM_RX_SIZE</name>
						<description>RX Camera uDMA transfer size of buffer register</description>
						<addressOffset>0x0384</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SIZE</name>
								<description>Buffer size in bytes. (128kBytes maximum)
- Read: buffer size left
- Write: set buffer size
NOTE: Careful with size in byte. If you use uncompressed pixel data mapped on 16 bits,
you have to declare buffer size in bytes even if buffer type is short.
</description>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2S_PDM_SETUP</name>
						<description>Configuration of PDM module</description>
						<addressOffset>0x032C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PDM_SHIFT</name>
								<description>Shifts the output of the filter</description>
								<bitRange>[2:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PDM_DECIMATION</name>
								<description>Sets the decimation ratio of the filter
</description>
								<bitRange>[12:3]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH0_LEN1</name>
						<description>FILTER tx channel  length2 register</description>
						<addressOffset>0x040C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_LEN1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH0_CFG</name>
						<description>FILTER tx channel  configuration register</description>
						<addressOffset>0x0404</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIZE</name>
								<description> Data transfer format:
- 2'b00: 8-bit
- 2'b01:16-bit
- 2;b10:32-bit</description>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>MODE</name>
								<description>Data transfer mode:
- 2'b00: Linear
- 2'b01: Sliding
- 2;b10:Circular
- 2;b11:2D
</description>
								<bitRange>[9:8]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SLIDING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LINEAR</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CIRCULAR</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>2D</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>CAM_VSYNC_POLARITY</name>
						<description>VSYNC Polarity register</description>
						<addressOffset>0x03B4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>VSYNC_POLARITY</name>
								<description> Set vsync polarity of CPI.
- 1'b0: Active 0
- 1'b1: Active 1
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH0_LEN2</name>
						<description>FILTER tx channel 0 length2 register</description>
						<addressOffset>0x0410</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_LEN2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH0_LEN0</name>
						<description>FILTER tx channel length1 register</description>
						<addressOffset>0x0408</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_ADD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH0_ADD</name>
						<description>FILTER tx channel address register</description>
						<addressOffset>0x0400</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_ADD</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CAM_CFG_SIZE</name>
						<description>Horizontal Resolution configuration register</description>
						<addressOffset>0x03AC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ROWLEN</name>
								<description>Horizontal Resolution. It is used for slice mode. Value set into the
bitfield must be equal to (rowlen-1).</description>
								<bitRange>[31:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CAM_CFG_LL</name>
						<description>Lower Left corner configuration register</description>
						<addressOffset>0x03A4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FRAMESLICE_LLX</name>
								<description>X coordinate of lower left corner of slice</description>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>FRAMESLICE_LLY</name>
								<description>Y coordinate of lower left corner of slice</description>
								<bitRange>[31:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CAM_RX_CFG</name>
						<description>RX Camera uDMA transfer configuration register</description>
						<addressOffset>0x0388</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (32 bits)
- 2'b11: +0
</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>0BITS</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description> Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending
</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable
</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CAM_RX_SADDR</name>
						<description>RX Camera uDMA transfer address of associated buffer register</description>
						<addressOffset>0x0380</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address</description>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2S_SLV_SETUP</name>
						<description>Configuration of I2S slave</description>
						<addressOffset>0x0324</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SLAVE_WORDS</name>
								<description> Sets how many words for each I2S phase
</description>
								<bitRange>[2:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>SLAVE_BITS</name>
								<description>Sets how many bits per word</description>
								<bitRange>[12:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>SLAVE_LSB</name>
								<description>Enables LSB shifting</description>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>SLAVE_2CH</name>
								<description>Enables both channels</description>
								<bitRange>[17:17]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>SLAVE_EN</name>
								<description>Enables the Slave
</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2S_TX_CFG</name>
						<description>TX Channel I2S uDMA transfer configuration</description>
						<addressOffset>0x0318</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2S_TX_SADDR</name>
						<description>TX Channel I2S uDMA transfer address of associated buffer</description>
						<addressOffset>0x0310</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address</description>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2S_RX_SIZE</name>
						<description>RX Channel 0 I2S uDMA transfer size of buffer</description>
						<addressOffset>0x0304</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SIZE</name>
								<description>Buffer size in byte. (128kBytes maximum)
- Read: buffer size left
- Write: set buffer size
</description>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2C1_SETUP</name>
						<description>uDMA I2C Configuration register.</description>
						<addressOffset>0x0234</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DO_RST</name>
								<description>Reset command used to abort the on-going transfer and clear busy and
arbitration lost status flags.
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2S_MST_SETUP</name>
						<description>Configuration of I2S master</description>
						<addressOffset>0x0328</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MASTER_WORDS</name>
								<description>Sets how many words for each I2S phase</description>
								<bitRange>[2:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>MASTER_BITS</name>
								<description>Sets how many bits per word
</description>
								<bitRange>[12:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>MASTER_LSB</name>
								<description>Enables LSB shifting</description>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>MASTER_2CH</name>
								<description>Enables both channels
</description>
								<bitRange>[17:17]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>MASTER_EN</name>
								<description>Enables the Master</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2S_CLKCFG_SETUP</name>
						<description>Clock configuration for both master, slave and pdm</description>
						<addressOffset>0x0320</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MASTER_CLK_DIV</name>
								<description>LSB of master clock divider</description>
								<bitRange>[7:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>SLAVE_CLK_DIV</name>
								<description>LSB of slave clock divider</description>
								<bitRange>[15:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>COMMON_CLK_DIV</name>
								<description>MSBs of both master and slave clock divider</description>
								<bitRange>[23:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>SLAVE_CLK_EN</name>
								<description> Enables Slave clock</description>
								<bitRange>[24:24]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>MASTER_CLK_EN</name>
								<description>Enables Master clock
</description>
								<bitRange>[25:25]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PDM_CLK_EN</name>
								<description>When enabled slave output clock is taken from PDM module.</description>
								<bitRange>[26:26]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>SLAVE_EXT</name>
								<description>When set uses external clock for slave</description>
								<bitRange>[28:28]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>SLAVE_NUM</name>
								<description>Selects slave clock source(either ext or generated):
-1'b0:selects master
-1'b1:selects slave
</description>
								<bitRange>[29:29]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>MASTER_EXT</name>
								<description>When set uses external clock for master</description>
								<bitRange>[30:30]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>MASTER_NUM</name>
								<description> Selects master clock source(either ext or generated):
-1'b0:selects master
-1'b1:selects slave</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2S_TX_SIZE</name>
						<description>TX Channel I2S uDMA transfer size of buffer</description>
						<addressOffset>0x0314</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SIZE</name>
								<description>Buffer size in byte. (128kBytes maximum)
- Read: buffer size left
- Write: set buffer size</description>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2S_RX_CFG</name>
						<description>RX Channel 0 I2S uDMA transfer configuration</description>
						<addressOffset>0x0308</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>I2S_RX_SADDR</name>
						<description>RX Channel0 I2S uDMA transfer address of associated buffer</description>
						<addressOffset>0x0300</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SADDR</name>
								<description> Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address
</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH1_ADD</name>
						<description>FILTER tx channel address register</description>
						<addressOffset>0x0414</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_ADD</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH1_CFG</name>
						<description>FILTER tx channel  configuration register</description>
						<addressOffset>0x0418</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIZE</name>
								<description> Data transfer format:
- 2'b00: 8-bit
- 2'b01:16-bit
- 2;b10:32-bit</description>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>MODE</name>
								<description>Data transfer mode:
- 2'b00: Linear
- 2'b01: Sliding
- 2;b10:Circular
- 2;b11:2D
</description>
								<bitRange>[9:8]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SLIDING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LINEAR</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CIRCULAR</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>2D</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH1_LEN0</name>
						<description>FILTER tx channel length1 register</description>
						<addressOffset>0x041C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_ADD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH1_LEN1</name>
						<description>FILTER tx channel  length2 register</description>
						<addressOffset>0x0420</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_LEN1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_FILT_CMD</name>
						<description>FILTER start register</description>
						<addressOffset>0x045C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>Filter start flag, write only, write 1 to start the filter :</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_BINCU_VAL</name>
						<description>FILTER binarization result
count register</description>
						<addressOffset>0x0454</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>REG_BINCU_VAL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_BINCU_CNT</name>
						<description>FILTER binarization count register</description>
						<addressOffset>0x044C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>COUNT</name>
								<description> Binarization and counting unit count value set.</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>Binarization and counting unit enable:
-1'b0: not enable
-1'b1: enable</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AU_REG1</name>
						<description>FILTER arithmetic unit 1 register</description>
						<addressOffset>0x0444</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_AU_REG1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AU_CFG</name>
						<description>FILTER arithmetic unit configuration register</description>
						<addressOffset>0x043C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIGNED</name>
								<description>Arithmetic Unit result signed or not.
-1'b0: not signed
-1'b1: signed
</description>
								<bitRange>[0:0]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>NOT_SIGNED</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SIGNED</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BYPASS</name>
								<description>Arithmetic Unit bypass or not.
-1'b0: not bypass AU
-1'b1: bypass AU</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>Arithmetic Unit mode:
-4'b0000: AU_MODE_AxB
-4'b0001: AU_MODE_AxB+REG0
-4'b0010: AU_MODE_AxB accumulation
-4'b0011: AU_MODE_AxA
-4'b0100: AU_MODE_AxA+B
-4'b0101: AU_MODE_AxA-B
-4'b0110: AU_MODE_AxA accumulation
-4'b0111: AU_MODE_AxA+REG0
-4'b1000: AU_MODE_AxREG1
-4'b1001: AU_MODE_AxREG1+B
-4'b1010: AU_MODE_AxREG1-B
-4'b1011: AU_MODE_AxREG1+REG0
-4'b1100: AU_MODE_AxREG1 accumulation
-4'b1101: AU_MODE_A+B
-4'b1110: AU_MODE_A-B
-4'b1111: AU_MODE_A+REG0
</description>
								<bitRange>[11:8]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>AU_MODE_AxA_accumulation</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1_accumulation</name>
										<value>12</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1plusB</name>
										<value>9</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AplusB</name>
										<value>13</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxAplusREG0</name>
										<value>7</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1</name>
										<value>8</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxAminusB</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AplusREG0</name>
										<value>15</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1plusREG0</name>
										<value>11</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxAplusB</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxA</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxB</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AminusB</name>
										<value>14</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1minusB</name>
										<value>10</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxBplusREG0</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxB_accumulation</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>SHIFT</name>
								<description> Arithmetic Unit shift window size, (0 – 31).</description>
								<bitRange>[20:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_RX_CH_LEN1</name>
						<description>FILTER RX channel length1 register</description>
						<addressOffset>0x0434</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_LEN1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_RX_CH_CFG</name>
						<description>FILTER RX channel configuration register</description>
						<addressOffset>0x042C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIZE</name>
								<description> Data transfer format:
- 2'b00: 8-bit
- 2'b01:16-bit
- 2;b10:32-bit</description>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>MODE</name>
								<description>Data transfer mode:
- 2'b00: Linear
- 2'b01: Sliding
- 2;b10:Circular
- 2;b11:2D
</description>
								<bitRange>[9:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>SLIDING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LINEAR</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CIRCULAR</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>2D</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH1_LEN2</name>
						<description>FILTER RX channel configuration register</description>
						<addressOffset>0x0424</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_LEN2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_STATUS</name>
						<description>FILTER status register</description>
						<addressOffset>0x0460</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DONE</name>
								<description> Filter done flag, write 1 to clear the flag :
-1'b0: Filter process is not finished
-1'b1: Filter process is finished</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_FILT</name>
						<description>FILTER control
mode register</description>
						<addressOffset>0x0458</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_FILT</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_BINCU_SETUP</name>
						<description>FILTER binarization result count register</description>
						<addressOffset>0x0450</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_BINCU_SETUP</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_BINCU_TH</name>
						<description>FILTER binarization threshold register</description>
						<addressOffset>0x0448</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_BINCU_TH</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AU_REG0</name>
						<description>FILTER arithmetic unit 0 register</description>
						<addressOffset>0x0440</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_AU_REG0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_RX_CH_LEN2</name>
						<description>FILTER RX channel length2 register</description>
						<addressOffset>0x0438</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_LEN2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_RX_CH_LEN0</name>
						<description>FILTER RX channel configuration register</description>
						<addressOffset>0x0430</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_LEN0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_RX_CH_ADD</name>
						<description>FILTER RX channel address register</description>
						<addressOffset>0x0428</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_ADD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>ethernet</name>
			<version>1.0</version>
			<baseAddress>0x0E000000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x008C</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0200</offset>
				<size>0x0030</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x008C</offset>
				<size>0x001C</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>MAC_registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>Tx_Hwmark</name>
						<description>used to set transmit Fifo high water mark</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0009</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tx_Hwmark</name>
								<description>used to set transmit Fifo high water mark</description>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>Tx_Lwmark</name>
						<description>used to set transmit Fifo low water mark</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tx_Lwmark</name>
								<description>used to set transmit Fifo low water mark</description>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MAC_rx_add_prom_add</name>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MAC_rx_add_prom_add</name>
								<bitRange>[2:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>Line_loop_en</name>
						<description>If Line_loop_en =1 , the packet transmited to Phy will loopback to receive side. This function is used for test purpose.</description>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Line_loop_en</name>
								<description>If Line_loop_en =1 , the packet transmited to Phy will loopback to receive side. This function is used for test purpose.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CPU_rd_dout_l</name>
						<description>All statistic counters are stored in a blockram. When you read a counter,you need to write the corresponding address to CPU_rd_addr register and assert CPU_rd_apply signal. When the counter data register CPU_rd_dout is available , the signal CPU_rd_grant will be “1”.</description>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CPU_rd_dout_l</name>
								<description>All statistic counters are stored in a blockram. When you read a counter,you need to write the corresponding address to CPU_rd_addr register and assert CPU_rd_apply signal. When the counter data register CPU_rd_dout is available , the signal CPU_rd_grant will be “1”.</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CPU_rd_apply</name>
						<description>All statistic counters are stored in a blockram. When you read a counter,you need to write the corresponding address to CPU_rd_addr register and assert CPU_rd_apply signal. When the counter data register CPU_rd_dout is available , the signal CPU_rd_grant will be “1”.</description>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CPU_rd_apply</name>
								<description>All statistic counters are stored in a blockram. When you read a counter,you need to write the corresponding address to CPU_rd_addr register and assert CPU_rd_apply signal. When the counter data register CPU_rd_dout is available , the signal CPU_rd_grant will be “1”.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RX_MIN_LENGTH</name>
						<description>The length of Received packet beyond minimal length and maximal length will be droped in receive Fifo. if the packet is already trasmitting in user interface , a error flag will enclosed at end of packet .</description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0040</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_MIN_LENGTH</name>
								<description>The length of Received packet beyond minimal length and maximal length will be droped in receive Fifo. if the packet is already trasmitting in user interface , a error flag will enclosed at end of packet .</description>
								<bitRange>[6:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RX_IFG_SET</name>
						<description>RX_IFG_SET is used to set received frame gap. If the gap between two received packets is less than RX_IFG_SET,the second packet will be drop as an
invalid frame.</description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x000C</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_IFG_SET</name>
								<description>RX_IFG_SET is used to set received frame gap. If the gap between two received packets is less than RX_IFG_SET,the second packet will be drop as an
invalid frame.</description>
								<bitRange>[5:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>Rx_Lwmark</name>
						<description>used to set receive Fifo low water mark</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Rx_Lwmark</name>
								<description>used to set receive Fifo low water mark</description>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RX_APPEND_CRC</name>
						<description>In some condition, the user application need MAC to retain FCS of ethernet frame. When RX_APPEND_CRC signal is equal “1” , the FCS of ethernet frame will transmit to user application.</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_APPEND_CRC</name>
								<description>In some condition, the user application need MAC to retain FCS of ethernet frame. When RX_APPEND_CRC signal is equal “1” , the FCS of ethernet frame will transmit to user application.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>broadcast_bucket_depth</name>
						<description>broadcast_bucket_depth register is used to setting the bucket depth</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>broadcast_bucket_depth</name>
								<description>broadcast_bucket_depth register is used to setting the bucket depth</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MAC_rx_add_prom_wr</name>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MAC_rx_add_prom_wr</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MAC_rx_add_chk_en</name>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MAC_rx_add_chk_en</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>xoff_cpu</name>
						<description>The rising pulse of xoff_cpu signal is used to start transmit one PAUSE frame when the transmit in idle state with quanta zero, asking remote ethernet controller jump out from pause state.</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>xoff_cpu</name>
								<description>The rising pulse of xoff_cpu signal is used to start transmit one PAUSE frame when the transmit in idle state with quanta zero, asking remote ethernet controller jump out from pause state.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MAC_tx_add_prom_wr</name>
						<description>Those registers are used to set mac address which will replace the target mac address of transmit packet. This function will be enable one when register MAC_tx_add_en set to “1”.
At the rising edge of signal MAC_tx_add_prom_wr, the value of MAC_tx_add_prom_data
will be write to prom address MAC_tx_add_prom_add. You need repeat six times to write six bytes length target mac to prom.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MAC_tx_add_prom_wr</name>
								<description>Those registers are used to set mac address which will replace the target mac address of transmit packet. This function will be enable one when register MAC_tx_add_en set to “1”.
At the rising edge of signal MAC_tx_add_prom_wr, the value of MAC_tx_add_prom_data
will be write to prom address MAC_tx_add_prom_add. You need repeat six times to write six bytes length target mac to prom.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MAC_tx_add_prom_data</name>
						<description>Those registers are used to set mac address which will replace the target mac address of transmit packet. This function will be enable one when register MAC_tx_add_en set to “1”.
At the rising edge of signal MAC_tx_add_prom_wr, the value of MAC_tx_add_prom_data
will be write to prom address MAC_tx_add_prom_add. You need repeat six times to write six bytes length target mac to prom.</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MAC_tx_add_prom_data</name>
								<description>Those registers are used to set mac address which will replace the target mac address of transmit packet. This function will be enable one when register MAC_tx_add_en set to “1”.
At the rising edge of signal MAC_tx_add_prom_wr, the value of MAC_tx_add_prom_data
will be write to prom address MAC_tx_add_prom_add. You need repeat six times to write six bytes length target mac to prom.</description>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MaxRetry</name>
						<description>When collision occurred in half duplex mode, the transmit state machine will try to transmit this collision packet again. If one packet collide MaxRetry times, this packet will be drop and never try again.</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0002</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MaxRetry</name>
								<description>When collision occurred in half duplex mode, the transmit state machine will try to transmit this collision packet again. If one packet collide MaxRetry times, this packet will be drop and never try again.</description>
								<bitRange>[3:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IFGset</name>
						<description>RX_IFG_SET is used to set received frame gap. If the gap between two received packets is less than RX_IFG_SET,the second packet will be drop as an invalid frame.</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x000C</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>IFGset</name>
								<description>RX_IFG_SET is used to set received frame gap. If the gap between two received packets is less than RX_IFG_SET,the second packet will be drop as an
invalid frame.</description>
								<bitRange>[5:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>pause_frame_send_en</name>
						<description>pause_frame_send_en register is used to enable transmit logic to send PAUSE frame.</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pause_frame_send_en</name>
								<description>pause_frame_send_en register is used to enable transmit logic to send PAUSE frame.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>Speed</name>
						<description>This register is used to set speed level of ethernet mac core.</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Speed</name>
								<description>This register is used to set speed level of ethernet mac core.</description>
								<bitRange>[2:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CPU_rd_dout_h</name>
						<description>All statistic counters are stored in a blockram. When you read a counter,you need to write the corresponding address to CPU_rd_addr register and assert CPU_rd_apply signal. When the counter data register CPU_rd_dout is available , the signal CPU_rd_grant will be “1”.</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CPU_rd_dout_h</name>
								<description>All statistic counters are stored in a blockram. When you read a counter,you need to write the corresponding address to CPU_rd_addr register and assert CPU_rd_apply signal. When the counter data register CPU_rd_dout is available , the signal CPU_rd_grant will be “1”.</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CPU_rd_grant</name>
						<description>All statistic counters are stored in a blockram. When you read a counter,you need to write the corresponding address to CPU_rd_addr register and assert CPU_rd_apply signal. When the counter data register CPU_rd_dout is available , the signal CPU_rd_grant will be “1”.</description>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CPU_rd_grant</name>
								<description>All statistic counters are stored in a blockram. When you read a counter,you need to write the corresponding address to CPU_rd_addr register and assert CPU_rd_apply signal. When the counter data register CPU_rd_dout is available , the signal CPU_rd_grant will be “1”.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CPU_rd_addr</name>
						<description>All statistic counters are stored in a blockram. When you read a counter,you need to write the corresponding address to CPU_rd_addr register and assert CPU_rd_apply signal. When the counter data register CPU_rd_dout is available , the signal CPU_rd_grant will be “1”.</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CPU_rd_addr</name>
								<description>All statistic counters are stored in a blockram. When you read a counter,you need to write the corresponding address to CPU_rd_addr register and assert CPU_rd_apply signal. When the counter data register CPU_rd_dout is available , the signal CPU_rd_grant will be “1”.</description>
								<bitRange>[5:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RX_MAX_LENGTH</name>
						<description>The length of Received packet beyond minimal length and maximal length will be droped in receive Fifo. if the packet is already trasmitting in user interface , a error flag will enclosed at end of packet .</description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x2710</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_MAX_LENGTH</name>
								<description>The length of Received packet beyond minimal length and maximal length will be droped in receive Fifo. if the packet is already trasmitting in user interface , a error flag will enclosed at end of packet .</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CRC_chk_en</name>
						<description>By default, the receive logic will drop any packet with FCS checksum error. By setting CRC_chk_en register to zero, you can disable received packet FCS checking.</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CRC_chk_en</name>
								<description>By default, the receive logic will drop any packet with FCS checksum error. By setting CRC_chk_en register to zero, you can disable received packet FCS checking.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>Rx_Hwmark</name>
						<description>used to set receive Fifo high water mark</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x001A</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Rx_Hwmark</name>
								<description>used to set receive Fifo high water mark</description>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>broadcast_bucket_interval</name>
						<description>The bucket wil be periodically refilled after broadcast_bucket_interval
time</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>broadcast_bucket_interval</name>
								<description>The bucket wil be periodically refilled after broadcast_bucket_interval
time</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>broadcast_filter_en</name>
						<description>The broadcast packet filter will enable only when broadcast_filter_en is set</description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>broadcast_filter_en</name>
								<description>The broadcast packet filter will enable only when broadcast_filter_en is set</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MAC_rx_add_prom_data</name>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MAC_rx_add_prom_data</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>xon_cpu</name>
						<description>The rising pulse of xon_cpu signal is used to start transmit one PAUSE frame with quanta value of pause_quanta_set when the transmit in idle state.</description>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>xon_cpu</name>
								<description>The rising pulse of xon_cpu signal is used to start transmit one PAUSE frame with quanta value of pause_quanta_set when the transmit in idle state.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>tx_pause_en</name>
						<description>When this register is “1”, this core will respond to received pause frame.The transmit state machine will enter PAUSE state according to quanta value in received packet . One quanta time is equal to the time of transmit 512bit data.</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>tx_pause_en</name>
								<description>When this register is “1”, this core will respond to received pause frame.The transmit state machine will enter PAUSE state according to quanta value in received packet . One quanta time is equal to the time of transmit 512bit data.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MAC_tx_add_prom_add</name>
						<description>Those registers are used to set mac address which will replace the target mac address of transmit packet. This function will be enable one when register MAC_tx_add_en set to “1”.
At the rising edge of signal MAC_tx_add_prom_wr, the value of MAC_tx_add_prom_data
will be write to prom address MAC_tx_add_prom_add. You need repeat six times to write six bytes length target mac to prom.</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MAC_tx_add_prom_add</name>
								<description>Those registers are used to set mac address which will replace the target mac address of transmit packet. This function will be enable one when register MAC_tx_add_en set to “1”.
At the rising edge of signal MAC_tx_add_prom_wr, the value of MAC_tx_add_prom_data
will be write to prom address MAC_tx_add_prom_add. You need repeat six times to write six bytes length target mac to prom.</description>
								<bitRange>[2:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MAC_tx_add_en</name>
						<description>Those registers are used to set mac address which will replace the target mac address of transmit packet. This function will be enable one when register MAC_tx_add_en set to “1”.
At the rising edge of signal MAC_tx_add_prom_wr, the value of MAC_tx_add_prom_data
will be write to prom address MAC_tx_add_prom_add. You need repeat six times to write six bytes length target mac to prom.</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MAC_tx_add_en</name>
								<description>Those registers are used to set mac address which will replace the target mac address of transmit packet. This function will be enable one when register MAC_tx_add_en set to “1”.
At the rising edge of signal MAC_tx_add_prom_wr, the value of MAC_tx_add_prom_data
will be write to prom address MAC_tx_add_prom_add. You need repeat six times to write six bytes length target mac to prom.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FullDuplex</name>
						<description>This config register is only used in 100Mbps and 10Mbps. When FullDuplex register is equal to “1” , the transmit state machine will be FullDuplex mode. Otherwise, the transmit state machine will detect collision ,perform random slot time back off , retransmit collision packet and some other half-duplex
operations.</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FullDuplex</name>
								<description>This config register is only used in 100Mbps and 10Mbps. When FullDuplex register is equal to “1” , the transmit state machine will be FullDuplex mode. Otherwise, the transmit state machine will detect collision ,perform random slot time back off , retransmit collision packet and some other half-duplex
operations.</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>pause_quanta_set</name>
						<description>pause_quanta_set register is used to setting quanta value in send PAUSE frame.</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pause_quanta_set</name>
								<description>pause_quanta_set register is used to setting quanta value in send PAUSE frame.</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>DMA_registers</name>
					<addressOffset>0x0200</addressOffset>
					<register>
						<name>irq</name>
						<description>One bit corresponds to an interrupt line from the MAC/DMA. When an interrupt is raised and its corresponding bit in irq_mask is set, its corresponding bit in irq is set and the external IRQ line is
asserted.
 
The IRQ line is deasserted when all bits in the irq register are unset by a write by the
processor.

In other words, the external IRQ line is an OR-reduction of the irq register. Writes to the irq register cannot assert new interrupt requests; in other words, the value stored in the irq register is the old contents combined with the write value by a bitwise AND.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq</name>
								<bitRange>[1:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_mask</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_mask</name>
								<bitRange>[1:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rx_pkg_lgth</name>
						<description>Data access to the package length FIFO. Length in bytes.

rx_pkg_lgth is read-only. The DMA write channel pushes packet lengths to the FIFO after the corresponding AXI transfers for the packet have finished.

Reading this register when the associated FIFO is not empty removes the first-written piece of data from the FIFO.
</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>rx_pkg_lgth</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rx_pkg_lgth_cnt</name>
						<description>Read-only register denoting how many packet lengths are available or yet to be processed in the
corresponding FIFO.</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>rx_pkg_lgth_cnt</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rx_rb_rd_pointer</name>
						<description>Stores the read pointers for the ring buffers.

For the RX/write channel, the read pointer is maintained by the host processor. If there is a packet available in the MAC RX FIFO but writing it to memory would overwrite unread data -- i.e. advance the write pointer past the read pointer -- The DMA write channel stalls until the read pointer is
updated to resolve this conflict. 

The value should point to the last read address or, when initialized, the last address of the ring buffer.

For the TX/read channel, the read pointer register is read-only and maintained by the host processor. The processor must not write “past” the read pointer.
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>rx_rb_rd_pointer</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rx_rb_size</name>
						<description>Stores the ring buffer size for the associated DMA channel in bytes.
</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>rx_rb_size</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rx_rb_start_address</name>
						<description>rx_rb_start_address, tx_rb_start_address

These registers store the start address for the ring buffer used by the DMA to read from or write to.

Writing to these registers has a side effect of initializing the ring buffer from the start address and size registers in the respective DMA unit and resetting the write pointer (for RX) or the read pointer (for TX) to the start of the ring buffer. Therefore, the associated size register (rx_rb_size or tx_rb_size) should be set first.

The DMA read and/or write channels remain inactive until the associated ring buffer is initialized by
writing to this register.</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>rx_rb_start_address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>tx_pkg_lgth</name>
						<description>Data access to the package length FIFO. Packet lengths in
bytes. 

tx_pkg_lgth is write-only. To issue a packet to be sent by the MAC, the host processor writes the ethernet frame data to the ring buffer, starting from a 4-byte aligned address immediately after the end of the previous packet, and writes the length of the packet to tx_pkg_lgth, in this order.</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>tx_pkg_lgth</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>tx_pkg_lgth_cnt</name>
						<description>Read-only registers denoting how many packet lengths are available or yet to be processed in the
corresponding FIFO.</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>tx_pkg_lgth_cnt</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>tx_rb_start_addr</name>
						<description>Register to store the start address for the ring buffer used by the DMA to write to.

Writing to the register has a side effect of initializing the ring buffer from the start address and size registers in the respective DMA unit and resetting the write pointer (for RX) to the start of the ring buffer. Therefore, the associated size register (tx_rb_size should be set first

The DMA read and/or write channels remain inactive until the associated ring buffer is initialized by
writing to this register.
</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>tx_rb_start_addr</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>tx_rb_size</name>
						<description>Stores the ring buffer size for the associated DMA channel in bytes.
</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>tx_rb_size</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>tx_rb_rd_pointer</name>
						<description>Stores the read pointers for the ring buffers.

For the RX/write channel, the read pointer is maintained by the host processor. If there is a packet available in the MAC RX FIFO but writing it to memory would overwrite unread data -- i.e. advance the write pointer past the read pointer -- The DMA write channel stalls until the read pointer is
updated to resolve this conflict. 

The value should point to the last read address or, when initialized, the last address of the ring buffer.

For the TX/read channel, the read pointer register is read-only and maintained by the host processor. The processor must not write “past” the read pointer.
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>tx_rb_rd_pointer</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>MDIO</name>
					<addressOffset>0x008C</addressOffset>
					<register>
						<name>MDIO_Divider</name>
						<description>Acts as input to MDIO clock divider. MDIO clock is derived from Reg_clk (125/2 MHz) by dividing it by this value. </description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x000A</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_Divider</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_WrData</name>
						<description>Data to write over MDIO. Used whenever a write operation is intiated with a write to the MDIO_Ctrl register. </description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_WrData</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_RegAddr</name>
						<description>MDIO register address. Used whenever a write or read operation is intiated with a write to the MDIO_Ctrl register. </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_RegAddr</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_PhyAddr</name>
						<description>MDIO PHY address. Used whenever a write or read operation is intiated with a write to the MDIO_Ctrl register</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_PhyAddr</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_Ctrl</name>
						<description>Three-bit bitfield. 

Bit 0 - No Preamble: When this bit is unset, read or write operations start with a 32-bit preamble. When it is set, preamble is not used. 

Bit 1 - Start Write: When this bit is set, MDIO logic starts a write operation with above write data, PHY and register addresses. This bit is automatically unset when the operation starts. 

Bit 2 - Start Read: When this bit is set, MDIO logic starts a read operations with above PHY and register addresses. This bit is automatically unset when the operation starts. 

Bits 1 and 2 should not be set simultaneously. </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>no_preample</name>
								<description>Bit 0 - No Preamble: When this bit is unset, read or write operations start with a 32-bit preamble. When it is set, preamble is not used. 
</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>start_write</name>
								<description>Bit 1 - Start Write: When this bit is set, MDIO logic starts a write operation with above write data, PHY and register addresses. This bit is automatically unset when the operation starts.</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>start_read</name>
								<description>Bit 2 - Start Read: When this bit is set, MDIO logic starts a read operations with above PHY and register addresses. This bit is automatically unset when the operation starts. </description>
								<bitRange>[2:2]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_RdData</name>
						<description>After MDIO read transaction has completed, this register is updated with the read result. </description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>MDIO_RdData</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_Status</name>
						<description>Single-bit register, reads as 1 if MDIO transfer is ongoing. </description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>MDIO_Status</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>DSP</name>
			<version>1.0</version>
			<description>Stores different status information about the core</description>
			<baseAddress>0x0D000000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0018</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0200</offset>
				<size>0x0018</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0300</offset>
				<size>0x0028</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0040</offset>
				<size>0x0014</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00020000</offset>
				<size>0x00010000</size>
				<usage>reserved</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>status_registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>status</name>
						<description>Status: Shows why the TTA core is in a break state
Bit 0: single-stepping breakpoint
Bit 1: Breakpoint 1
Bit 2: Breakpoint 2
Bit 3: Manual breakpoint</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>single_stepping_breakpoint</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>breakpoint_1</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>manual_breakpoint</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>breakpoint_2</name>
								<bitRange>[3:3]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>program_counter</name>
						<description>Program counter</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>program_counter</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cycle_count_low</name>
						<description>Low part of Cycle count register</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>cycle_count_low</name>
								<description>Cycle count (low 32 bits)</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cycle_count_high</name>
						<description>High part of Cycle count register</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>cycle_count_high</name>
								<description>Cycle count (high 32 bits)</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>stall_count_low</name>
						<description>Low part of Stall count</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>stall_count_low</name>
								<description>Stall count (low 32 bits)</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>stall_count_high</name>
						<description>High part of Stall count</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>stall_count_high</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>control_registers</name>
					<addressOffset>0x0200</addressOffset>
					<register>
						<name>command</name>
						<description> Command (1 = reset, 2 = run, 4 = break)</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>command</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>start_address</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>start_address</name>
								<description>star</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>breakpoint_enable</name>
						<description>Breakpoint enable

Bit 0-1: Reserved
Bit 2: Enable single-stepping breakpoint
Bit 3: Enable breakpoint 1
Bit 3: Enable breakpoint 2</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>single_step_breakpoint_enable</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>enable_breakpoint_1</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>enable_breakpoint_2</name>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>breakpoint_1_addr</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>breakpoint_1_addr</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>breakpoint_2_addr</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>breakpoint_2_addr</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cycle_count_breakpoint</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>cycle_count_breakpoint</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>processor_info_registers</name>
					<addressOffset>0x0300</addressOffset>
					<register>
						<name>device_class</name>
						<description>Device class (0x774)</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>device_class</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>device_id</name>
						<description>Device ID (unimplemented)
</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>device_id</name>
								<description>device id</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>interface_version</name>
						<description>Interface version (0x2)
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>interface_version</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>core_count</name>
						<description>Core count</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>core_count</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ctrl_size</name>
						<description>CTRL size, per core, in bytes</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ctrl_size</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>data_mem_size</name>
						<description> Data memory size, in bytes</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>data_mem_size</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>instr_mem_size</name>
						<description> Instruction memory size, in bytes</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>instr_mem_size</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>breakpoint_count</name>
						<description> Breakpoint count (0x2)</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>breakpoint_count</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>param_mem_size</name>
						<description>Parameter memory size, in bytes</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>param_mem_size</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>debug_feature_support</name>
						<description>Debug feature support (0x1)
</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>debug_feature_support</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>bus_trace_registers</name>
					<addressOffset>0x0040</addressOffset>
					<register>
						<name>bus_trace_reg_0</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>bus_trace_reg_1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>bus_trace_reg_1</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>bus_trace_reg_2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>bus_trace_reg_2</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>bus_trace_reg_2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>bus_trace_reg_3</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>bus_trace_reg_3</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>bus_trace_reg_4</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>bus_trace_reg_4</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>AI</name>
			<version>1.0</version>
			<baseAddress>0x0F000000</baseAddress>
			<addressBlock>
				<offset>0x1000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x2000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x3000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x4000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x5000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x6000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x7000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x8000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x9000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0xA000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0xB000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00011000</offset>
				<size>0x00020000</size>
				<usage>reserved</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>GLB</name>
					<addressOffset>0x1000</addressOffset>
					<register>
						<name>HW_VERSION</name>
						<description>HW version of NVDLA</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x30300031</resetValue>
						<resetMask>0xFFFF00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>MAJOR</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>MINOR</name>
								<bitRange>[23:8]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>INTR_MASK</name>
						<description>Interrupt mask control</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFC000C03</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SDP_DONE_MASK0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>SDP_DONE_MASK1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDP_DONE_MASK0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDP_DONE_MASK1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>PDP_DONE_MASK0</name>
								<bitRange>[4:4]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>PDP_DONE_MASK1</name>
								<bitRange>[5:5]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>BDMA_DONE_MASK0</name>
								<bitRange>[6:6]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>BDMA_DONE_MASK1</name>
								<bitRange>[7:7]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>RUBIK_DONE_MASK0</name>
								<bitRange>[8:8]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>RUBIK_DONE_MASK1</name>
								<bitRange>[9:9]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDMA_DAT_DONE_MASK0</name>
								<bitRange>[16:16]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDMA_DAT_DONE_MASK1</name>
								<bitRange>[17:17]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDMA_WT_DONE_MASK0</name>
								<bitRange>[18:18]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDMA_WT_DONE_MASK1</name>
								<bitRange>[19:19]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CACC_DONE_MASK0</name>
								<bitRange>[20:20]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CACC_DONE_MASK1</name>
								<bitRange>[21:21]</bitRange>
								<access>read-writeOnce</access>
							</field>
						</fields>
					</register>
					<register>
						<name>INTR_SET</name>
						<description>Interrupt set control</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFC000C03</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>SDP_DONE_SET0</name>
								<bitRange>[0:0]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>SDP_DONE_SET1</name>
								<bitRange>[1:1]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>CDP_DONE_SET0</name>
								<bitRange>[2:2]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>CDP_DONE_SET1</name>
								<bitRange>[3:3]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>PDP_DONE_SET0</name>
								<bitRange>[4:4]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>PDP_DONE_SET1</name>
								<bitRange>[5:5]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>BDMA_DONE_SET0</name>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>BDMA_DONE_SET1</name>
								<bitRange>[7:7]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>RUBIK_DONE_SET0</name>
								<bitRange>[8:8]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>RUBIK_DONE_SET1</name>
								<bitRange>[9:9]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>CDMA_DAT_DONE_SET0</name>
								<bitRange>[16:16]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>CDMA_DAT_DONE_SET1</name>
								<bitRange>[17:17]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>CDMA_WT_DONE_SET0</name>
								<bitRange>[18:18]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>CDMA_WT_DONE_SET1</name>
								<bitRange>[19:19]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>CACC_DONE_SET0</name>
								<bitRange>[20:20]</bitRange>
								<access>write-only</access>
							</field>
							<field>
								<name>CACC_DONE_SET1</name>
								<bitRange>[21:21]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>INTR_STATUS</name>
						<description>Interrupt status</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFC000C03</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SDP_DONE_STATUS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>SDP_DONE_STATUS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDP_DONE_STATUS0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDP_DONE_STATUS1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>PDP_DONE_STATUS0</name>
								<bitRange>[4:4]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>PDP_DONE_STATUS1</name>
								<bitRange>[5:5]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>BDMA_DONE_STATUS0</name>
								<bitRange>[6:6]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>BDMA_DONE_STATUS1</name>
								<bitRange>[7:7]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>RUBIK_DONE_STATUS0</name>
								<bitRange>[8:8]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>RUBIK_DONE_STATUS1</name>
								<bitRange>[9:9]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDMA_DAT_DONE_STATUS0</name>
								<bitRange>[16:16]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDMA_DAT_DONE_STATUS1</name>
								<bitRange>[17:17]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDMA_WT_DONE_STATUS0</name>
								<bitRange>[18:18]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CDMA_WT_DONE_STATUS1</name>
								<bitRange>[19:19]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CACC_DONE_STATUS0</name>
								<bitRange>[20:20]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>CACC_DONE_STATUS1</name>
								<bitRange>[21:21]</bitRange>
								<access>read-writeOnce</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>MCIF</name>
					<addressOffset>0x2000</addressOffset>
					<register>
						<name>CFG_RD_WEIGHT_0</name>
						<description>Register0 to control the read weight of clients in MCIF</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x01000100</resetValue>
						<resetMask>0xFF00FF00</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RD_WEIGHT_BDMA</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RD_WEIGHT_SDP</name>
								<bitRange>[15:8]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RD_WEIGHT_PDP</name>
								<bitRange>[23:16]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RD_WEIGHT_CDP</name>
								<bitRange>[31:24]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CFG_RD_WEIGHT_1</name>
						<description>Register1 to control the read weight of clients in MCIF
</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x01000100</resetValue>
						<resetMask>0xFF00FF00</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RD_WEIGHT_SDP_B</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RD_WEIGHT_SDP_N</name>
								<bitRange>[15:8]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RD_WEIGHT_SDP_E</name>
								<bitRange>[23:16]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RD_WEIGHT_CDMA_DAT</name>
								<bitRange>[31:24]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CFG_RD_WEIGHT_2</name>
						<description>Register2 to control the read weight of clients in MCIF</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x01000100</resetValue>
						<resetMask>0xFF00FF00</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RD_WEIGHT_CDMA_WT</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RD_WEIGHT_RBK</name>
								<bitRange>[15:8]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RD_WEIGHT_RSV_1</name>
								<bitRange>[23:16]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RD_WEIGHT_RSV_0</name>
								<bitRange>[31:24]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CFG_WR_WEIGHT_0</name>
						<description>Register0 to control the write weight of clients in MCIF</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x01000100</resetValue>
						<resetMask>0xFF00FF00</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WR_WEIGHT_BDMA</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>WR_WEIGHT_SDP</name>
								<bitRange>[15:8]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>WR_WEIGHT_PDP</name>
								<bitRange>[23:16]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>WR_WEIGHT_CDP</name>
								<bitRange>[31:24]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CFG_WR_WEIGHT_1</name>
						<description>Register1 to control the write weight of clients in MCIF</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x01000100</resetValue>
						<resetMask>0xFF00FF00</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WR_WEIGHT_RBK</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>WR_WEIGHT_RSV_2</name>
								<bitRange>[15:8]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>WR_WEIGHT_RSV_1</name>
								<bitRange>[23:16]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>WR_WEIGHT_RSV_0</name>
								<bitRange>[31:24]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CFG_OUTSTANDING_CNT</name>
						<description>Outstanding AXI transactions in unit of 64Byte
 </description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x00FF00FF</resetValue>
						<resetMask>0x00FF00FF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RD_OS_CNT</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>WR_OS_CNT</name>
								<bitRange>[15:8]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS</name>
						<description>Idle status of MCIF</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x00010000</resetValue>
						<resetMask>0x00010000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>IDLE</name>
								<bitRange>[8:8]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>CDMA</name>
					<addressOffset>0x3000</addressOffset>
					<register>
						<name>S_STATUS</name>
						<description>Idle status of two register groups</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xC0000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_0</name>
								<bitRange>[1:0]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>STATUS_1</name>
								<bitRange>[17:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_POINTER</name>
						<description>Pointer for CSB master and data path to access groups</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRODUCER</name>
								<bitRange>[0:0]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CONSUMER</name>
								<bitRange>[16:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_ARBITER</name>
						<description>WMB and Weight share same port to access external memory. This register controls the weight factor in the arbiter.</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x30000000</resetValue>
						<resetMask>0xF0000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ARB_WEIGHT</name>
								<bitRange>[3:0]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>ARB_WMB</name>
								<bitRange>[19:16]</bitRange>
								<access>read-writeOnce</access>
							</field>
						</fields>
					</register>
					<register>
						<name>S_CBUF_FLUSH_STATUS</name>
						<description>Indicates whether CBUF flush is finished after reset.</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>FLUSH_DONE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OP_ENABLE</name>
						<description>Set it to 1 to kick off operation for current register group</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>OP_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_MISC_CFG</name>
						<description>Configuration of operation: convolution mode, precision, weight reuse, data reuse.</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x88008801</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONV_MODE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>DIRECT</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WINOGRAD</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>IN_PRECISION</name>
								<bitRange>[9:8]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PROC_PRECISION</name>
								<bitRange>[13:12]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DATA_REUSE</name>
								<bitRange>[16:16]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>WEIGHT_REUSE</name>
								<bitRange>[20:20]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>SKIP_DATA_RLS</name>
								<bitRange>[24:24]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>SKIP_WEIGHT_RLS</name>
								<bitRange>[28:28]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAIN_FORMAT</name>
						<description>Input data format and pixel format</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x00006000</resetValue>
						<resetMask>0x8801F800</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_FORMAT</name>
								<bitRange>[0:0]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>PIXEL</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>FEATURE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PIXEL_FORMAT</name>
								<bitRange>[13:8]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>T_R8</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_R10</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_R12</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_R16</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_R16_I</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_R16_F</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_A16B16G16R16</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_X16B16G16R16</name>
										<value>7</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_A16B16G16R16_F</name>
										<value>8</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_A16Y16U16V16</name>
										<value>9</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_V16U16Y16A16</name>
										<value>10</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_A16Y16U16V16_F</name>
										<value>11</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_A8B8G8R8</name>
										<value>12</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_Y10___V10U10_N444</name>
										<value>31</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_R8G8B8X8</name>
										<value>19</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_A8R8G8B8</name>
										<value>13</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_A8Y8U8V8</name>
										<value>26</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_B8G8R8X8</name>
										<value>18</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_Y12___U12V12_N444</name>
										<value>32</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_A2B10G10R10</name>
										<value>20</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_B8G8R8A8</name>
										<value>14</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_Y12___V12U12_N444</name>
										<value>33</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_A2R10G10B10</name>
										<value>21</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_R8G8B8A8</name>
										<value>15</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_Y16___U16V16_N444</name>
										<value>34</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_B10G10R10A2</name>
										<value>22</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_V8U8Y8A8</name>
										<value>27</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_X8B8G8R8</name>
										<value>16</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_Y16___V16U16_N444</name>
										<value>35</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_R10G10B10A2</name>
										<value>23</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_Y8___U8V8_N444</name>
										<value>28</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_Y8___V8U8_N444</name>
										<value>29</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_Y10___U10V10_N444</name>
										<value>30</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_X8R8G8B8</name>
										<value>17</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_A2Y10U10V10</name>
										<value>24</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>T_V10U10Y10A2</name>
										<value>25</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PIXEL_MAPPING</name>
								<bitRange>[16:16]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>PITCH_LINEAR</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RESERVED_LINEAR</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PIXEL_SIGN_OVERRIDE</name>
								<bitRange>[20:20]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>UNSIGNED_INT</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SIGNED_INT</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAIN_SIZE_0</name>
						<description>Input cube’s width and height</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFF80000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_WIDTH</name>
								<bitRange>[12:0]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>DATAIN_HEIGHT</name>
								<bitRange>[28:16]</bitRange>
								<access>read-writeOnce</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAIN_SIZE_1</name>
						<description>Input cube’s channel</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_CHANNEL</name>
								<bitRange>[12:0]</bitRange>
								<access>read-writeOnce</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAIN_SIZE_EXT_0</name>
						<description>Input cube’s width and height after extension</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFF80000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_WIDTH_EXT</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATAIN_HEIGHT_EXT</name>
								<bitRange>[28:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PIXEL_OFFSET</name>
						<description>For image-in mode, horizontal offset and vertical offset of the 1 st pixel.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xE0000003</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PIXEL_X_OFFSET</name>
								<bitRange>[4:0]</bitRange>
								<access>read-writeOnce</access>
							</field>
							<field>
								<name>PIXEL_Y_OFFSET</name>
								<bitRange>[18:16]</bitRange>
								<access>read-writeOnce</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DAIN_RAM_TYPE</name>
						<description>Ram type of input RAM</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_RAM_TYPE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-writeOnce</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>CVIF</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MCIF</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DAIN_ADDR_HIGH_0</name>
						<description>Higher 32bits of input data address when axi araddr is 64bits</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_ADDR_HIGH_0</name>
								<bitRange>[31:0]</bitRange>
								<access>read-writeOnce</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DAIN_ADDR_LOW_0</name>
						<description>Lower 32bits of input data address</description>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_ADDR_LOW_0</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DAIN_ADDR_HIGH_1</name>
						<description>Higher 32bits of input data address of UV plane when axi araddr is 64bits</description>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_ADDR_HIGH_1</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DAIN_ADDR_LOW_1</name>
						<description>Lower 32bits of input data address of UV plane</description>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_ADDR_LOW_1</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_LINE_STRIDE</name>
						<description>Line stride of input cube</description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LINE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_LINE_UV_STRIDE</name>
						<description>Line stride of input cube’s UV plane</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>UV_LINE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SURF_STRIDE</name>
						<description>Surface stride of input cube</description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SURF_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DAIN_MAP</name>
						<description>Whether input cube is line packed or surface packed</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LINE_PACKED</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FALSE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TRUE</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>SURF_PACKED</name>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>TRUE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>FALSE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BATCH_NUMBER</name>
						<description>Number of batches</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x001F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BATCHES</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BATCH_STRIDE</name>
						<description>The stride of input data cubes when batches &gt; 1</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BATCH_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_ENTRY_PER_SLICE</name>
						<description>Number of CBUF entries used for one input slice</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x3FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ENTRIES</name>
								<bitRange>[13:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_FETCH_GRAIN</name>
						<description>Number of slices to be fetched before sending update information to CSC</description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>GRAINS</name>
								<bitRange>[11:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_FORMAT</name>
						<description>Whether weight is compressed or not</description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WEIGHT_FORMAT</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>COMPRESSED</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>UNCOMPRESSED</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_SIZE_0</name>
						<description>The size of one kernel in bytes</description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x0003FFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BYTE_PER_KERNEL</name>
								<bitRange>[17:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_SIZE_1</name>
						<description>Number of kernels</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WEIGHT_KERNEL</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_RAM_TYPE</name>
						<description>Ram type of weight</description>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WEIGHT_RAM_TYPE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>MCIF</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CVIF</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_ADDR_HIGH</name>
						<description>Higher 32bits of weight address when axi araddr is 64bits</description>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WEIGHT_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_ADDR_LOW</name>
						<description>Lower 32bits of weight address</description>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WEIGHT_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_BYTES</name>
						<description>Total bytes of Weight</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x01FFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WEIGHT_BYTES</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WGS_ADDR_HIGH</name>
						<description>Higher 32bits of wgs address when axi araddr is 64bits</description>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WGS_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WGS_ADDR_LOW</name>
						<description>Lower 32bits of wgs address</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WGS_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WMB_ADDR_HIGH</name>
						<description>Higher 32bits of wmb address when axi araddr is 64bits</description>
						<addressOffset>0x008C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WMB_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WMB_ADDR_LOW</name>
						<description>Lower 32bits of wmb address</description>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WMB_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WMB_BYTES</name>
						<description>Total bytes of WMB</description>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x001FFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WMB_BYTES</name>
								<bitRange>[27:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_MEAN_FORMAT</name>
						<description>Whether mean registers are used or not</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MEAN_FORMAT</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_MEAN_GLOBAL_0</name>
						<description>Global mean value for red in RGB or Y in YUV
Global mean value for green in RGB or U in YUV</description>
						<addressOffset>0x009C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFF0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MEAN_RY</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>MEAN_GU</name>
								<bitRange>[31:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_MEAN_GLOBAL_1</name>
						<description>Global mean value for blue in RGB or V in YUV
Global mean value for alpha in ARGB/AYUV or X in XRGB</description>
						<addressOffset>0x00A0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFF0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MEAN_BV</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>MEAN_AX</name>
								<bitRange>[31:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CVT_CFG</name>
						<description>Enable/disable input data converter in CDMA and number of bits to be truncated in the input data converter</description>
						<addressOffset>0x00A4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x03F1</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CVT_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CVT_TRUNCATE</name>
								<bitRange>[9:4]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CVT_OFFSET</name>
						<description>Offset of input data convertor</description>
						<addressOffset>0x00A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CVT_OFFSET</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CVT_SCALE</name>
						<description>Scale of input data convertor</description>
						<addressOffset>0x00AC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CVT_SCALE</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CONV_STRIDE</name>
						<description>Convolution x stride and convolution y stride</description>
						<addressOffset>0x00B0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xE0000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONV_X_STRIDE</name>
								<bitRange>[2:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>CONV_Y_STRIDE</name>
								<bitRange>[18:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_ZERO_PADDING</name>
						<description>Left/right/top/bottom padding size</description>
						<addressOffset>0x00B4</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFC007C00</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_LEFT</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PAD_RIGHT</name>
								<bitRange>[13:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PAD_TOP</name>
								<bitRange>[20:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PAD_BOTTOM</name>
								<bitRange>[29:24]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_ZERO_PADDING_VALUE</name>
						<description>Padding value</description>
						<addressOffset>0x00B8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_VALUE</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BANK</name>
						<description>Number of data banks and weight banks in CBUF</description>
						<addressOffset>0x00BC</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xF8000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATA_BANK</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>WEIGHT_BANK</name>
								<bitRange>[20:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_NAN_FLUSH_TO_ZERO</name>
						<description>Enable/Disable flushing input NaN to zero</description>
						<addressOffset>0x00C0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>NAN_TO_ZERO</name>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_NAN_INPUT_DATA_NUM</name>
						<description>Count NaN number in input data cube, update per layer</description>
						<addressOffset>0x00C4</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>NAN_DATA_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_NAN_INPUT_WEIGHT_NUM</name>
						<description>Count NaN number in weight kernels, update per layer</description>
						<addressOffset>0x00C8</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>NAN_WEIGHT_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_INF_INPUT_DATA_NUM</name>
						<description>Count infinity number in input data cube, update per layer</description>
						<addressOffset>0x00CC</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>INF_DATA_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_INF_INPUT_WEIGHT_NUM</name>
						<description>Count infinity number in weight kernels, update per layer</description>
						<addressOffset>0x00D0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>INF_WEIGHT_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_ENABLE</name>
						<description>Enable/disable performance counter</description>
						<addressOffset>0x00D4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DMA_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_DAT_READ_STALL</name>
						<description>Count blocking cycles of read request of input data, update per layer</description>
						<addressOffset>0x00D8</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>DAT_RD_STALL</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_WT_READ_STALL</name>
						<description>Count blocking cycles of read request of weight data, update per layer</description>
						<addressOffset>0x00DC</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>WT_RD_STALL</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_DAT_READ_LATENCY</name>
						<description>Count total latency cycles of read response of input data, update per layer</description>
						<addressOffset>0x00E0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>DAT_RD_LATENCY</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_WT_READ_LATENCY</name>
						<description>Count total latency cycles of read request of weight data, update per layer</description>
						<addressOffset>0x00E4</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>WT_RD_LATENCY</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CYA</name>
						<addressOffset>0x00E8</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>D_CYA</name>
								<description>CYA register</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>CSC</name>
					<addressOffset>0x4000</addressOffset>
					<register>
						<name>S_STATUS</name>
						<description>Idle status of two register groups</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xC0000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_0</name>
								<bitRange>[1:0]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>STATUS_1</name>
								<bitRange>[17:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_POINTER</name>
						<description>Pointer for CSB master and data path to access groups</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRODUCER</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CONSUMER</name>
								<bitRange>[16:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OP_ENABLE</name>
						<description>Set it to 1 to kick off operation for current register group</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>OP_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_MISC_CFG</name>
						<description>Configuration of operation: convolution mode, precision, weight reuse, data reuse.</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x88008801</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONV_MODE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>DIRECT</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WINOGRAD</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>IN_PRECISION</name>
								<bitRange>[9:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PROC_PRECISION</name>
								<bitRange>[13:12]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DATA_REUSE</name>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>WEIGHT_REUSE</name>
								<bitRange>[20:20]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>SKIP_DATA_RLS</name>
								<bitRange>[24:24]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>SKIP_WEIGHT_RLS</name>
								<bitRange>[28:28]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAIN_FORMAT</name>
						<description>Input data format and pixel format</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_FORMAT</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>PIXEL</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>FEATURE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAIN_SIZE_EXT_0</name>
						<description>Input cube’s width and height after extension</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFF80000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_WIDTH_EXT</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATAIN_HEIGHT_EXT</name>
								<bitRange>[28:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAIN_SIZE_EXT_1</name>
						<description>Input cube’s channel after extension</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAIN_CHANNEL_EXT</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BATCH_NUMBER</name>
						<description>Number of batches</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x001F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BATCHES</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POST_Y_EXTENSION</name>
						<description>Post extension parameter for image-in</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0003</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Y_EXTENSION</name>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_ENTRY_PER_SLICE</name>
						<description>Number of CBUF entries used for one input slice</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x3FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ENTRIES</name>
								<bitRange>[13:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_FORMAT</name>
						<description>Whether weight is compressed or not</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WEIGHT_FORMAT</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>COMPRESSED</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>UNCOMPRESSED</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_SIZE_EXT_0</name>
						<description>Weight’s width and height after extension</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xF8000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WEIGHT_WIDTH_EXT</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>WEIGHT_HEIGHT_EXT</name>
								<bitRange>[20:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_SIZE_EXT_1</name>
						<description>Weight’s channel after extension and number of weight kernels</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFF80000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WEIGHT_CHANNEL_EXT</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>WEIGHT_KERNEL</name>
								<bitRange>[28:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WEIGHT_BYTES</name>
						<description>Total bytes of Weight</description>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x01FFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WEIGHT_BYTES</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_WMB_BYTES</name>
						<description>Total bytes of WMB</description>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x001FFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WMB_BYTES</name>
								<bitRange>[27:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAOUT_SIZE_0</name>
						<description>Output cube’s width and height</description>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFF80000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAOUT_WIDTH</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATAOUT_HEIGHT</name>
								<bitRange>[28:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAOUT_SIZE_1</name>
						<description>Output cube’s channel</description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAOUT_CHANNEL</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_ATOMICS</name>
						<description>Equals to output_data_cube_width * output_data_cube_height - 1</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x00000001</resetValue>
						<resetMask>0x001FFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ATOMICS</name>
								<bitRange>[20:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_RELEASE</name>
						<description>Slices of CBUF to be released at the end of current layer</description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RLS_SLICES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CONV_STRIDE_EXT</name>
						<description>Convolution x stride and convolution y stride after extension</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xE0000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONV_X_STRIDE_EXT</name>
								<bitRange>[2:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>CONV_Y_STRIDE_EXT</name>
								<bitRange>[18:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DILATION_EXT</name>
						<description>Dilation parameter</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xF8000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>X_DILATION_EXT</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>Y_DILATION_EXT</name>
								<bitRange>[20:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_ZERO_PADDING</name>
						<description>Left/right/top/bottom padding size</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xF8000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_LEFT</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PAD_TOP</name>
								<bitRange>[20:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_ZERO_PADDING_VALUE</name>
						<description>Padding value</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_VALUE</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BANK</name>
						<description>Number of data banks and weight banks in CBUF</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xF8000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATA_BANK</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>WEIGHT_BANK</name>
								<bitRange>[20:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PRA_CFG</name>
						<description>PRA truncate in Winograd mode, range: 0~2</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0003</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRA_TRUNCATE</name>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CYA</name>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>D_CYA</name>
								<description>CYA register</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>CMAC_A</name>
					<addressOffset>0x5000</addressOffset>
					<register>
						<name>S_STATUS</name>
						<description>Idle status of two register groups</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xC0000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_0</name>
								<bitRange>[1:0]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>STATUS_1</name>
								<bitRange>[17:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_POINTER</name>
						<description>Pointer for CSB master and data path to access groups</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRODUCER</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CONSUMER</name>
								<bitRange>[16:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OP_ENABLE</name>
						<description>Set it to 1 to kick off operation for current register group</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>OP_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_MISC_CFG</name>
						<description>Configuration of operation: convolution mode, precision, etc.</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x00100000</resetValue>
						<resetMask>0x00300001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONV_MODE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>DIRECT</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WINOGRAD</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PROC_PRECISION</name>
								<bitRange>[13:12]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>CMAC_B</name>
					<addressOffset>0x6000</addressOffset>
					<register>
						<name>S_STATUS</name>
						<description>Idle status of two register groups</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xC0000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_0</name>
								<bitRange>[1:0]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>STATUS_1</name>
								<bitRange>[17:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_POINTER</name>
						<description>Pointer for CSB master and data path to access groups</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRODUCER</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CONSUMER</name>
								<bitRange>[16:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OP_ENABLE</name>
						<description>Set it to 1 to kick off operation for current register group</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>OP_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_MISC_CFG</name>
						<description>Configuration of operation: convolution mode, precision, etc.</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x00100000</resetValue>
						<resetMask>0x00300001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONV_MODE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>WINOGRAD</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DIRECT</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PROC_PRECISION</name>
								<bitRange>[13:12]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>CACC</name>
					<addressOffset>0x7000</addressOffset>
					<register>
						<name>S_STATUS</name>
						<description>Idle status of two register groups</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xC0000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_0</name>
								<bitRange>[1:0]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>STATUS_1</name>
								<bitRange>[17:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_POINTER</name>
						<description>Pointer for CSB master and data path to access groups</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRODUCER</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CONSUMER</name>
								<bitRange>[16:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OP_ENABLE</name>
						<description>Set it to 1 to kick off operation for current register group</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>OP_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_MISC_CFG</name>
						<description>Configuration of operation: convolution mode, precision, etc.</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x00100000</resetValue>
						<resetMask>0x00300001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONV_MODE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>WINOGRAD</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DIRECT</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PROC_PRECISION</name>
								<bitRange>[13:12]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAOUT_SIZE_0</name>
						<description>Input cube’s width and height after extension</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFF80000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAOUT_WIDTH</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATAOUT_HEIGHT</name>
								<bitRange>[28:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAOUT_SIZE_1</name>
						<description>Input cube’s channel after extension</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAOUT_CHANNEL</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAOUT_ADDR</name>
						<description>Address of output cube</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATAOUT_ADDR</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BATCH_NUMBER</name>
						<description>Number of batches</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x001F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BATCHES</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_LINE_STRIDE</name>
						<description>Line stride of output cube</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x00FFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LINE_STRIDE</name>
								<bitRange>[23:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SURF_STRIDE</name>
						<description>Line stride of surface cube</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x00FFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SURF_STRIDE</name>
								<bitRange>[23:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATAOUT_MAP</name>
						<description>Whether output cube is line packed or surface packed</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LINE_PACKED</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>TRUE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>FALSE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>SURF_PACKED</name>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>TRUE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>FALSE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CLIP_CFG</name>
						<description>Number of bits to be truncated before sending to SDP</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x001F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CLIP_TRUNCATE</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OUT_SATURATION</name>
						<description>Output saturation count</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SAT_COUNT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CYA</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>D_CYA</name>
								<description>CYA register</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>SDP_RDMA</name>
					<addressOffset>0x8000</addressOffset>
					<register>
						<name>S_STATUS</name>
						<description>Idle status of two register groups</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xC0000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_0</name>
								<bitRange>[1:0]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>STATUS_1</name>
								<bitRange>[17:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_POINTER</name>
						<description>Pointer for CSB master and data path to access groups</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRODUCER</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CONSUMER</name>
								<bitRange>[16:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OP_ENABLE</name>
						<description>Set it to 1 to kick off operation for current register group</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>OP_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_WIDTH</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WIDTH</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_HEIGHT</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>HEIGHT</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_CHANNEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CHANNEL</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_BASE_ADDR_LOW</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_BASE_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_BASE_ADDR_HIGH</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_BASE_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_LINE_STRIDE</name>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_LINE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_SURFACE_STRIDE</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_SURFACE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BRDMA_CFG</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x003F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BRDMA_DISABLE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BRDMA_DATA_USE</name>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>MUL</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>ALU</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>BOTH</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BRDMA_DATA_SIZE</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ONE_BYTE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TWO_BYTE</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BRDMA_DATA_MODE</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>PER_KERNEL</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PER_ELEMENT</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BRDMA_RAM_TYPE</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>CV</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MC</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BS_BASE_ADDR_LOW</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BS_BASE_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BS_BASE_ADDR_HIGH</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BS_BASE_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BS_LINE_STRIDE</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BS_LINE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BS_SURFACE_STRIDE</name>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BS_SURFACE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BS_BATCH_STRIDE</name>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BS_BATCH_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_NRDMA_CFG</name>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x003F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>NRDMA_DISABLE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>NRDMA_DATA_USE</name>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>MUL</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>BOTH</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>ALU</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>NRDMA_DATA_SIZE</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>TWO_BYTE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>ONE_BYTE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>NRDMA_DATA_MODE</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>PER_KERNEL</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PER_ELEMENT</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>NRDMA_RAM_TYPE</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>MC</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CV</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BN_BASE_ADDR_LOW</name>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BN_BASE_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BN_BASE_ADDR_HIGH</name>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BN_BASE_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BN_LINE_STRIDE</name>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BN_LINE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BN_SURFACE_STRIDE</name>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BN_SURFACE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_BN_BATCH_STRIDE</name>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BN_BATCH_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_ERDMA_CFG</name>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x003F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ERDMA_DISABLE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ERDMA_DATA_USE</name>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>MUL</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>BOTH</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>ALU</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ERDMA_DATA_SIZE</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>TWO_BYTE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>ONE_BYTE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ERDMA_DATA_MODE</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>PER_KERNEL</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PER_ELEMENT</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ERDMA_RAM_TYPE</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>MC</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CV</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_EW_BASE_ADDR_LOW</name>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_BASE_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_EW_BASE_ADDR_HIGH</name>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_BASE_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_EW_LINE_STRIDE</name>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_LINE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_EW_SURFACE_STRIDE</name>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_SURFACE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_EW_BATCH_STRIDE</name>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_BATCH_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_FEATURE_MODE_CFG</name>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x00000014</resetValue>
						<resetMask>0x001F00FF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FLYING_MODE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>OFF</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>ON</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>WINOGRAD</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ON</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>OFF</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>IN_PRECISION</name>
								<bitRange>[3:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PROC_PRECISION</name>
								<bitRange>[5:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUT_PRECISION</name>
								<bitRange>[7:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BATCH_NUMBER</name>
								<bitRange>[12:8]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_DMA_CFG</name>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_RAM_TYPE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>MC</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CV</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_STATUS_NAN_INPUT_NUM</name>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>STATUS_NAN_INPUT_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_STATUS_INF_INPUT_NUM</name>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>STATUS_INF_INPUT_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_ERDMA_READ_STALL</name>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERDMA_STALL</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_BRDMA_READ_STALL</name>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>BRDMA_STALL</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_ENABLE</name>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0003</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PERF_DMA_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PERF_NAN_INF_COUNT_EN</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_NRDMA_READ_STALL</name>
						<addressOffset>0x008C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>NRDMA_STALL</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_MRDMA_READ_STALL</name>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>MRDMA_STALL</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>SDP</name>
					<addressOffset>0x9000</addressOffset>
					<register>
						<name>S_STATUS</name>
						<description>Idle status of two register groups</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xC0000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_0</name>
								<bitRange>[1:0]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>STATUS_1</name>
								<bitRange>[17:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_POINTER</name>
						<description>Pointer for CSB master and data path to access groups</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRODUCER</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CONSUMER</name>
								<bitRange>[16:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_ACCESS_CFG</name>
						<description>LUT access address and type</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xC00000FF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_ADDR</name>
								<bitRange>[9:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>LUT_TABLE_ID</name>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>LE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LO</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>LUT_ACCESS_TYPE</name>
								<bitRange>[17:17]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>READ</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WRITE</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_ACCESS_DATA</name>
						<description>Data register of read or write LUT</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_DATA</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_CFG</name>
						<description>LUT’s type: exponent or linear. And the selection between LE and LO tables.</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0071</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_LE_FUNCTION</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>EXPONENT</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LINEAR</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>LUT_UFLOW_PRIORITY</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>LO</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>LUT_OFLOW_PRIORITY</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>LO</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>LUT_HYBRID_PRIORITY</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>LO</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_INFO</name>
						<description>LE and LO LUT index offset and selection</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFF00FF00</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_LE_INDEX_OFFSET</name>
								<bitRange>[7:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>LUT_LE_INDEX_SELECT</name>
								<bitRange>[15:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>LUT_LO_INDEX_SELECT</name>
								<bitRange>[23:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_LE_START</name>
						<description>Start of LE LUT’s range</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_LE_START</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_LE_END</name>
						<description>End of LE LUT’s range</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_LE_END</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_LO_START</name>
						<description>Start of LO LUT’s range</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_LO_START</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_LO_END</name>
						<description>End of LO LUT’s range</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_LO_END</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_LE_SLOPE_SCALE</name>
						<description>Slope scale parameter for LE LUT underflow and overflow, signed value</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFF0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_LE_SLOPE_UFLOW_SCALE</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>LUT_LE_SLOPE_OFLOW_SCALE</name>
								<bitRange>[31:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_LE_SLOPE_SHIFT</name>
						<description>Slope shift parameter for LE_LUT underflow and overflow, signed value</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x03FF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_LE_SLOPE_UFLOW_SHIFT</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>LUT_LE_SLOPE_OFLOW_SHIFT</name>
								<bitRange>[9:5]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_LO_SLOPE_SCALE</name>
						<description>Slope scale parameter for LO LUT underflow and overflow, signed value</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFF0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_LO_SLOPE_UFLOW_SCALE</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>LUT_LO_SLOPE_OFLOW_SCALE</name>
								<bitRange>[31:16]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>S_LUT_LO_SLOPE_SHIFT</name>
						<description>Slope shift parameter for LO_LUT underflow and overflow, signed value</description>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x03FF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LUT_LO_SLOPE_UFLOW_SHIFT</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>LUT_LO_SLOPE_OFLOW_SHIFT</name>
								<bitRange>[9:5]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OP_ENABLE</name>
						<description>Set it to 1 to kick off operation for current register group</description>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>OP_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_WIDTH</name>
						<description>Input cube’s width</description>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>WIDTH</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_HEIGHT</name>
						<description>Input cube’s height</description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>HEIGHT</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_CHANNEL</name>
						<description>Input cube’s channel</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CHANNEL</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_BASE_ADDR_LOW</name>
						<description>Lower 32bits of output data address</description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>DST_BASE_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_BASE_ADDR_HIGH</name>
						<description>Higher 32bits of output data address when axi awaddr is 64bits</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DST_BASE_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_LINE_STRIDE</name>
						<description>Line stride of output data cube</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DST_LINE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_SURFACE_STRIDE</name>
						<description>Surface stride of output data cube</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DST_SURFACE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_BS_CFG</name>
						<description>Configurations of BS module: bypass, algorithm, etc.</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0073</resetValue>
						<resetMask>0x007F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BS_BYPASS</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BS_ALU_BYPASS</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BS_ALU_ALGO</name>
								<bitRange>[3:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>MAX</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MIN</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SUM</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BS_MUL_BYPASS</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BS_MUL_PRELU</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BS_RELU_BYPASS</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_BS_ALU_CFG</name>
						<description>Source type and shifter value of BS ALU</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x003F0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BS_ALU_SRC</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>REG</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MEM</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BS_ALU_SHIFT_VALUE</name>
								<bitRange>[13:8]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_BS_ALU_SRC_VALUE</name>
						<description>Operand value of BS ALU</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BS_ALU_OPERAND</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_BS_MUL_CFG</name>
						<description>Source type and shifter value of BS MUL</description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x00FF0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BS_MUL_SRC</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>REG</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MEM</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BS_MUL_SHIFT_VALUE</name>
								<bitRange>[15:8]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_BS_MUL_SRC_VALUE</name>
						<description>Operand value of BS MUL</description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BS_MUL_OPERAND</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_BN_CFG</name>
						<description>Configurations of BN module: bypass, algorithm, etc.</description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0053</resetValue>
						<resetMask>0x007F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BN_BYPASS</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BN_ALU_BYPASS</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BN_ALU_ALGO</name>
								<bitRange>[3:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>SUM</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MIN</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MAX</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BN_MUL_BYPASS</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BN_MUL_PRELU</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BN_RELU_BYPASS</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_BN_ALU_CFG</name>
						<description>Source type and shifter value of BN ALU</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x003F0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BN_ALU_SRC</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>REG</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MEM</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BN_ALU_SHIFT_VALUE</name>
								<bitRange>[13:8]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_BN_ALU_SRC_VALUE</name>
						<description>Operand value of BN ALU</description>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BN_ALU_OPERAND</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_BN_MUL_CFG</name>
						<description>Source type and shifter value of BN MUL</description>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x00FF0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BN_MUL_SRC</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>REG</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MEM</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BN_MUL_SHIFT_VALUE</name>
								<bitRange>[15:8]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_BN_MUL_SRC_VALUE</name>
						<description>Operand value of BN MUL</description>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>BN_MUL_OPERAND</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_CFG</name>
						<description>Configurations of EW module: bypass, algorithm, etc.</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0053</resetValue>
						<resetMask>0x007F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_BYPASS</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EW_ALU_BYPASS</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EW_ALU_ALGO</name>
								<bitRange>[3:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>SUM</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MIN</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MAX</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EW_MUL_BYPASS</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EW_MUL_PRELU</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EW_LUT_BYPASS</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_ALU_CFG</name>
						<description>Source type and bypass control of EW ALU</description>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0002</resetValue>
						<resetMask>0x0003</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_ALU_SRC</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>REG</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MEM</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EW_ALU_CVT_BYPASS</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_ALU_SRC_VALUE</name>
						<description>Operand value of EW ALU</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_ALU_OPERAND</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_ALU_CVT_OFFSET_VALUE</name>
						<description>Converter offset of EW ALU</description>
						<addressOffset>0x008C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_ALU_CVT_OFFSET</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_ALU_CVT_SCALE_VALUE</name>
						<description>Converter scale of EW ALU</description>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_ALU_CVT_SCALE</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_ALU_CVT_TRUNCATE_VALUE</name>
						<description>Converter truncate of EW ALU</description>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x003F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_ALU_CVT_TRUNCATE</name>
								<bitRange>[5:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_MUL_CFG</name>
						<description>Source type and bypass control of EW MUL</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0002</resetValue>
						<resetMask>0x0003</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_MUL_SRC</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>REG</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MEM</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EW_MUL_CVT_BYPASS</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_MUL_SRC_VALUE</name>
						<description>Operand value of EW MUL</description>
						<addressOffset>0x009C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_MUL_OPERAND</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_MUL_CVT_OFFSET_VALUE</name>
						<description>Converter offset of EW MUL</description>
						<addressOffset>0x00A0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_MUL_CVT_OFFSET</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_MUL_CVT_SCALE_VALUE</name>
						<description>Converter scale of EW MUL</description>
						<addressOffset>0x00A4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_MUL_CVT_SCALE</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_MUL_CVT_TRUNCATE_VALUE</name>
						<description>Converter truncate of EW MUL</description>
						<addressOffset>0x00A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x003F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_MUL_CVT_TRUNCATE</name>
								<bitRange>[5:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DP_EW_TRUNCATE_VALUE</name>
						<description>Truncate of EW</description>
						<addressOffset>0x00AC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x03FF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EW_TRUNCATE</name>
								<bitRange>[9:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_FEATURE_MODE_CFG</name>
						<description>Operation configuration: flying mode, output destination, Direct or Winograd mode, flush NaN to zero, batch number.</description>
						<addressOffset>0x00B0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x001F000F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FLYING_MODE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ON</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>OFF</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_DST</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>MEM</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PDP</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>WINOGRAD</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ON</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>OFF</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>NAN_TO_ZERO</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BATCH_NUMBER</name>
								<bitRange>[12:8]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_DMA_CFG</name>
						<description>Destination RAM type</description>
						<addressOffset>0x00B4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DST_RAM_TYPE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>CV</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MC</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_BATCH_STRIDE</name>
						<description>Stride of output cubes in batch mode</description>
						<addressOffset>0x00B8</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DST_BATCH_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_FORMAT</name>
						<description>Data precision</description>
						<addressOffset>0x00BC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x000F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PROC_PRECISION</name>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUT_PRECISION</name>
								<bitRange>[3:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CVT_OFFSET</name>
						<description>Output converter offset</description>
						<addressOffset>0x00C0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CVT_OFFSET</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CVT_SCALE</name>
						<description>Output converter scale</description>
						<addressOffset>0x00C4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CVT_SCALE</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CVT_SHIFT</name>
						<description>Output converter shifter value</description>
						<addressOffset>0x00C8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x003F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CVT_SHIFT</name>
								<bitRange>[5:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_STATUS</name>
						<description>Output of equal mode</description>
						<addressOffset>0x00CC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_UNEQUAL</name>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_STATUS_NAN_INPUT_NUM</name>
						<description>Input NaN element number</description>
						<addressOffset>0x00D0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_NAN_INPUT_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_STATUS_INF_INPUT_NUM</name>
						<description>Input Infinity element number</description>
						<addressOffset>0x00D4</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_INF_INPUT_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_STATUS_NAN_OUTPUT_NUM</name>
						<description>Output NaN element number</description>
						<addressOffset>0x00D8</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_NAN_OUTPUT_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_ENABLE</name>
						<description>Enable/Disable performance counting</description>
						<addressOffset>0x00DC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x000F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PERF_DMA_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PERF_LUT_EN</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PERF_SAT_EN</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PERF_NAN_INF_COUNT_EN</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>YES</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>NO</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_WDMA_WRITE_STALL</name>
						<description>Count stall cycles of write DMA for one layer</description>
						<addressOffset>0x00E0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>WDMA_STALL</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_LUT_UFLOW</name>
						<description>Element number of both table underflow</description>
						<addressOffset>0x00E4</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>LUT_UFLOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_LUT_OFLOW</name>
						<description>Element number of both table overflow</description>
						<addressOffset>0x00E8</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>LUT_OFLOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_OUT_SATURATION</name>
						<description>Element number of both table saturation</description>
						<addressOffset>0x00EC</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>OUT_SATURATION</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_LUT_HYBRID</name>
						<description>Element number of both hit, or both miss situation that element underflow one table and at the same time overflow the other.</description>
						<addressOffset>0x00F0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>LUT_HYBRID</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_LUT_LE_HIT</name>
						<description>Element number of only LE table hit</description>
						<addressOffset>0x00F4</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>LUT_LE_HIT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_LUT_LO_HIT</name>
						<description>Element number of only LO table hit</description>
						<addressOffset>0x00F8</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>LUT_LO_HIT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>PDP_RDMA</name>
					<addressOffset>0xA000</addressOffset>
					<register>
						<name>S_STATUS</name>
						<description>Idle status of two register groups</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xC0000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_0</name>
								<bitRange>[1:0]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>STATUS_1</name>
								<bitRange>[17:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_POINTER</name>
						<description>Pointer for CSB master and data path to access groups</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRODUCER</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CONSUMER</name>
								<bitRange>[16:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OP_ENABLE</name>
						<description>Set it to 1 to kick off operation for current register group</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>OP_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_IN_WIDTH</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CUBE_IN_WIDTH</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_IN_HEIGHT</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CUBE_IN_HEIGHT</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_IN_CHANNEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CUBE_IN_CHANNEL</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_FLYING_MODE</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FLYING_MODE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ON</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>OFF</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_BASE_ADDR_LOW</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_BASE_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_BASE_ADDR_HIGH</name>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_BASE_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_LINE_STRIDE</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_LINE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_SURFACE_STRIDE</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_SURFACE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_RAM_CFG</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_RAM_TYPE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>CV</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MC</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_FORMAT</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0003</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INPUT_DATA</name>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OPERATION_MODE_CFG</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SPLIT_NUM</name>
								<bitRange>[7:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_KERNEL_CFG</name>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>KERNEL_WIDTH</name>
								<bitRange>[3:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>WIDTH_1</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_2</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_3</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_4</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_5</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_6</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_7</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_8</name>
										<value>7</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>KERNEL_STRIDE_WIDTH</name>
								<bitRange>[7:4]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_PADDING_CFG</name>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x000F</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_WIDTH</name>
								<bitRange>[3:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PARTIAL_WIDTH_IN</name>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFC03FF0</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PARTIAL_WIDTH_IN_FIRST</name>
								<bitRange>[9:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PARTIAL_WIDTH_IN_LAST</name>
								<bitRange>[19:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PARTIAL_WIDTH_IN_MID</name>
								<bitRange>[29:20]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_ENABLE</name>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DMA_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_READ_STALL</name>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PERF_READ_STALL</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CYA</name>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>D_CYA</name>
								<description>CYA register</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>PDP</name>
					<addressOffset>0xB000</addressOffset>
					<register>
						<name>S_STATUS</name>
						<description>Idle status of two register groups</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xC0000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS_0</name>
								<bitRange>[1:0]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>STATUS_1</name>
								<bitRange>[17:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>IDLE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RUNNING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>PENDING</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>S_POINTER</name>
						<description>Pointer for CSB master and data path to access groups</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x80000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRODUCER</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CONSUMER</name>
								<bitRange>[16:16]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>GROUP_0</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>GROUP_1</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OP_ENABLE</name>
						<description>Set it to 1 to kick off operation for current register group</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>OP_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_IN_WIDTH</name>
						<description>Input data cube’s width</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CUBE_IN_WIDTH</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_IN_HEIGHT</name>
						<description>Input data cube’s height</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CUBE_IN_HEIGHT</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_IN_CHANNEL</name>
						<description>Input data cube’s channel</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CUBE_IN_CHANNEL</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_OUT_WIDTH</name>
						<description>Output data cube’s width</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CUBE_OUT_WIDTH</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_OUT_HEIGHT</name>
						<description>Output data cube’s height</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CUBE_OUT_HEIGHT</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_CUBE_OUT_CHANNEL</name>
						<description>Output data cube’s channel</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CUBE_OUT_CHANNEL</name>
								<bitRange>[12:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_OPERATION_MODE_CFG</name>
						<description>Split number</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x00FF0013</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>POOLING_METHOD</name>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>AVERAGE</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MAX</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MIN</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>FLYING_MODE</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>SPLIT_NUM</name>
								<bitRange>[15:8]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_NAN_FLUSH_TO_ZERO</name>
						<description>Option to flush input NaN to zero</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>NAN_TO_ZERO</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PARTIAL_WIDTH_IN</name>
						<description>Partial width for first, last and middle partitions of input cube</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFC03FF0</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PARTIAL_WIDTH_IN_FIRST</name>
								<bitRange>[9:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PARTIAL_WIDTH_IN_LAST</name>
								<bitRange>[19:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PARTIAL_WIDTH_IN_MID</name>
								<bitRange>[29:20]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PARTIAL_WIDTH_OUT</name>
						<description>Partial width for first, last and middle partitions of output cube</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFC03FF0</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PARTIAL_WIDTH_OUT_FIRST</name>
								<bitRange>[9:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PARTIAL_WIDTH_OUT_LAST</name>
								<bitRange>[19:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PARTIAL_WIDTH_OUT_MID</name>
								<bitRange>[29:20]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_KERNEL_CFG</name>
						<description>Kernel width and kernel stride</description>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFF000F00</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>KERNEL_WIDTH</name>
								<bitRange>[3:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>WIDTH_8</name>
										<value>7</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_7</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_6</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_5</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_4</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_3</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_2</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>WIDTH_1</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>KERNEL_HEIGHT</name>
								<bitRange>[11:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>HEIGHT_8</name>
										<value>7</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>HEIGHT_7</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>HEIGHT_6</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>HEIGHT_5</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>HEIGHT_4</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>HEIGHT_3</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>HEIGHT_2</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>HEIGHT_1</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>KERNEL_STRIDE_WIDTH</name>
								<bitRange>[19:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>KERNEL_STRIDE_HEIGHT</name>
								<bitRange>[23:20]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_RECIP_KERNEL_WIDTH</name>
						<description>Reciprocal of pooling kernel width, set to actual value * (2^16) when INT8/INT16 format enabled. and set to actual value for fp16 precision mode with fp17 data format.</description>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x0001FFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RECIP_KERNEL_WIDTH</name>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_RECIP_KERNEL_HEIGHT</name>
						<description>Reciprocal of pooling kernel height, set to actual value * (2^16) when INT8/INT16 format enabled. and set to actual value for fp16 precision mode with fp17 data format.</description>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x0001FFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RECIP_KERNEL_HEIGHT</name>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_PADDING_CFG</name>
						<description>Left/right/top/bottom padding size</description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x00770077</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_LEFT</name>
								<bitRange>[2:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PAD_TOP</name>
								<bitRange>[6:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PAD_RIGHT</name>
								<bitRange>[10:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PAD_BOTTOM</name>
								<bitRange>[14:12]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_PADDING_VALUE_1_CFG</name>
						<description>Padding_value*1</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x0007FFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_VALUE_1X</name>
								<bitRange>[18:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_PADDING_VALUE_2_CFG</name>
						<description>Padding_value*2</description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x0007FFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_VALUE_2X</name>
								<bitRange>[18:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_PADDING_VALUE_3_CFG</name>
						<description>Padding_value*3</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x0007FFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_VALUE_3X</name>
								<bitRange>[18:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_PADDING_VALUE_4_CFG</name>
						<description>Padding_value*4</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x0007FFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_VALUE_4X</name>
								<bitRange>[18:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_PADDING_VALUE_5_CFG</name>
						<description>Padding_value*5</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x0007FFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_VALUE_5X</name>
								<bitRange>[18:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_PADDING_VALUE_6_CFG</name>
						<description>Padding_value*6</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x0007FFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_VALUE_6X</name>
								<bitRange>[18:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_POOLING_PADDING_VALUE_7_CFG</name>
						<description>Padding_value*7</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0x0007FFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_VALUE_7X</name>
								<bitRange>[18:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_BASE_ADDR_LOW</name>
						<description>Lower 32bits of input data address</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_BASE_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_BASE_ADDR_HIGH</name>
						<description>Higher 32bits of input data address when axi araddr is 64bits</description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_BASE_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_LINE_STRIDE</name>
						<description>Line stride of input cube</description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_LINE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SRC_SURFACE_STRIDE</name>
						<description>Surface stride of input cube</description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SRC_SURFACE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_BASE_ADDR_LOW</name>
						<description>Lower 32bits of output data address</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DST_BASE_ADDR_LOW</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_BASE_ADDR_HIGH</name>
						<description>Higher 32bits of output data address when axi awaddr is 64bits</description>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DST_BASE_ADDR_HIGH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_LINE_STRIDE</name>
						<description>Line stride of output cube</description>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DST_LINE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_SURFACE_STRIDE</name>
						<description>Surface stride of output cube</description>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DST_SURFACE_STRIDE</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DST_RAM_CFG</name>
						<description>RAM type of destination cube</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DST_RAM_TYPE</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>CV</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>MC</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DATA_FORMAT</name>
						<description>Precision of input data</description>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0003</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INPUT_DATA</name>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>FP16</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT16</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>INT8</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_INF_INPUT_NUM</name>
						<description>Input infinity element number</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>INF_INPUT_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_NAN_INPUT_NUM</name>
						<description>Input NaN element number</description>
						<addressOffset>0x008C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>NAN_INPUT_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_NAN_OUTPUT_NUM</name>
						<description>Output NaN element number</description>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>NAN_OUTPUT_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_ENABLE</name>
						<description>Enable/disable performance counting</description>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0001</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DMA_EN</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>ENABLE</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>DISABLE</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>D_PERF_WRITE_STALL</name>
						<description>Counting stalls of write requests</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PERF_WRITE_STALL</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>D_CYA</name>
						<addressOffset>0x009C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>D_CYA</name>
								<description>CYA register</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>CFGROM</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>HW_VERSION_0</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00010001</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>HW_VERSION</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>GLB_DESC_0</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x00000001</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>GLB_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CIF_DESC_0</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x00180002</resetValue>
						<resetMask>0x07FFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CIF_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CIF_CAP_INCOMPAT_0</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CIF_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CIF_CAP_COMPAT_0</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x1FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CIF_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CIF_BASE_WIDTH_0</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x000F</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CIF_BASE_WIDTH</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CIF_BASE_LATENCY_0</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0032</resetValue>
						<resetMask>0xFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CIF_BASE_LATENCY</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CIF_BASE_BURST_LENGTH_MAX_0</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0080</resetValue>
						<resetMask>0x1FE0</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>BASE_BURST_LENGTH_MAX</name>
								<bitRange>[31:5]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CIF_BASE_MEM_ADDR_WIDTH_0</name>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0400</resetValue>
						<resetMask>0x1FE0</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CIF_BASE_MEM_ADDR_WIDTH</name>
								<bitRange>[31:5]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_DESC_0</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x00340003</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_CAP_INCOMPAT_0</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_CAP_COMPAT_0</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x00000010</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_BASE_FEATURE_TYPES_0</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_BASE_FEATURE_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_BASE_WEIGHT_TYPES_0</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_BASE_WEIGHT_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_BASE_ATOMIC_C_0</name>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_BASE_ATOMIC_C</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_BASE_ATOMIC_K_0</name>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_BASE_ATOMIC_K</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_BASE_ATOMIC_M_0</name>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_BASE_ATOMIC_M</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_BASE_CBUF_BANK_NUM_0</name>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x00000020</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_BASE_CBUF_BANK_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_BASE_CBUF_BANK_WIDTH_0</name>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x00000008</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_BASE_CBUF_BANK_WIDTH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_BASE_CBUF_BANK_DEPTH_0</name>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x00000200</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_BASE_CBUF_BANK_DEPTH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_MULTI_BATCH_MAX_0</name>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_MULTI_BATCH_MAX</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_IMAGE_IN_FORMATS_PACKED_0</name>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0CFFF001</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_IMAGE_IN_FORMATS_PACKED</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDMA_IMAGE_IN_FORMATS_SEMI_0</name>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x00000003</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDMA_IMAGE_IN_FORMATS_SEMI</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CBUF_DESC_0</name>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x00180004</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CBUF_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CBUF_CAP_INCOMPAT_0</name>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CBUF_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CBUF_CAP_COMPAT_0</name>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CBUF_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CBUF_BASE_CBUF_BANK_NUM_0</name>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x00000020</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CBUF_BASE_CBUF_BANK_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CBUF_BASE_CBUF_BANK_WIDTH_0</name>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x00000008</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CBUF_BASE_CBUF_BANK_WIDTH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CBUF_BASE_CBUF_BANK_DEPTH_0</name>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x00000200</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CBUF_BASE_CBUF_BANK_DEPTH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CBUF_BASE_CDMA_ID_0</name>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x00000003</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CBUF_BASE_CDMA_ID</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_DESC_0</name>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x00300005</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_CAP_INCOMPAT_0</name>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_CAP_COMPAT_0</name>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x00000010</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_BASE_FEATURE_TYPES_0</name>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_BASE_FEATURE_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_BASE_WEIGHT_TYPES_0</name>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_BASE_WEIGHT_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_BASE_ATOMIC_C_0</name>
						<addressOffset>0x008C</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_BASE_ATOMIC_C</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_BASE_ATOMIC_K_0</name>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_BASE_ATOMIC_K</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_BASE_ATOMIC_M_0</name>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_BASE_ATOMIC_M</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_BASE_CBUF_BANK_NUM_0</name>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x00000020</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_BASE_CBUF_BANK_NUM</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_BASE_CBUF_BANK_WIDTH_0</name>
						<addressOffset>0x009C</addressOffset>
						<resetValue>0x00000008</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_BASE_CBUF_BANK_WIDTH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_BASE_CBUF_BANK_DEPTH_0</name>
						<addressOffset>0x00A0</addressOffset>
						<resetValue>0x00000200</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_BASE_CBUF_BANK_DEPTH</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_BASE_CDMA_ID_0</name>
						<addressOffset>0x00A4</addressOffset>
						<resetValue>0x00000003</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_BASE_CDMA_ID</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CSC_MULTI_BATCH_MAX_0</name>
						<addressOffset>0x00A8</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CSC_MULTI_BATCH_MAX</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_A_DESC_0</name>
						<addressOffset>0x00AC</addressOffset>
						<resetValue>0x001C0006</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_A_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_A_CAP_INCOMPAT_0</name>
						<addressOffset>0x00B0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_A_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_A_CAP_COMPAT_0</name>
						<addressOffset>0x00B4</addressOffset>
						<resetValue>0x00000010</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_A_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_A_BASE_FEATURE_TYPES_0</name>
						<addressOffset>0x00B8</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_A_BASE_FEATURE_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_A_BASE_WEIGHT_TYPES_0</name>
						<addressOffset>0x00BC</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_A_BASE_WEIGHT_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_A_BASE_ATOMIC_C_0</name>
						<addressOffset>0x00C0</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_A_BASE_ATOMIC_C</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_A_BASE_ATOMIC_K_0</name>
						<addressOffset>0x00C4</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_A_BASE_ATOMIC_K</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_A_BASE_CDMA_ID_0</name>
						<addressOffset>0x00C8</addressOffset>
						<resetValue>0x00000003</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_A_BASE_CDMA_ID</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_B_DESC_0</name>
						<addressOffset>0x00CC</addressOffset>
						<resetValue>0x001C0006</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_B_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_B_CAP_INCOMPAT_0</name>
						<addressOffset>0x00D0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_B_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_B_CAP_COMPAT_0</name>
						<addressOffset>0x00D4</addressOffset>
						<resetValue>0x00000010</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_B_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_B_BASE_FEATURE_TYPES_0</name>
						<addressOffset>0x00D8</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_B_BASE_FEATURE_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_B_BASE_WEIGHT_TYPES_0</name>
						<addressOffset>0x00DC</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_B_BASE_WEIGHT_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_B_BASE_ATOMIC_C_0</name>
						<addressOffset>0x00E0</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_B_BASE_ATOMIC_C</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_B_BASE_ATOMIC_K_0</name>
						<addressOffset>0x00E4</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_B_BASE_ATOMIC_K</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CMAC_B_BASE_CDMA_ID_0</name>
						<addressOffset>0x00E8</addressOffset>
						<resetValue>0x00000003</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CMAC_B_BASE_CDMA_ID</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CACC_DESC_0</name>
						<addressOffset>0x00EC</addressOffset>
						<resetValue>0x00200007</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CACC_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CACC_CAP_INCOMPAT_0</name>
						<addressOffset>0x00F0</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CACC_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CACC_CAP_COMPAT_0</name>
						<addressOffset>0x00F4</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CACC_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CACC_BASE_FEATURE_TYPES_0</name>
						<addressOffset>0x00F8</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CACC_BASE_FEATURE_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CACC_BASE_WEIGHT_TYPES_0</name>
						<addressOffset>0x00FC</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CACC_BASE_WEIGHT_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CACC_BASE_ATOMIC_C_0</name>
						<addressOffset>0x0100</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CACC_BASE_ATOMIC_C</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CACC_BASE_ATOMIC_K_0</name>
						<addressOffset>0x0104</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CACC_BASE_ATOMIC_K</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CACC_BASE_CDMA_ID_0</name>
						<addressOffset>0x0108</addressOffset>
						<resetValue>0x00000003</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CACC_BASE_CDMA_ID</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CACC_MULTI_BATCH_MAX_0</name>
						<addressOffset>0x010C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CACC_MULTI_BATCH_MAX</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_RDMA_DESC_0</name>
						<addressOffset>0x0110</addressOffset>
						<resetValue>0x000E0008</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_RDMA_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_RDMA_CAP_INCOMPAT_0</name>
						<addressOffset>0x0114</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_RDMA_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_RDMA_CAP_COMPAT_0</name>
						<addressOffset>0x0118</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_RDMA_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_RDMA_BASE_ATOMIC_M_0</name>
						<addressOffset>0x011C</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_RDMA_BASE_ATOMIC_M</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_RDMA_BASE_SDP_ID_0</name>
						<addressOffset>0x0120</addressOffset>
						<resetValue>0x00000009</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_RDMA_BASE_SDP_ID</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_DESC_0</name>
						<addressOffset>0x0124</addressOffset>
						<resetValue>0x00200009</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_CAP_INCOMPAT_0</name>
						<addressOffset>0x0128</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_CAP_COMPAT_0</name>
						<addressOffset>0x012C</addressOffset>
						<resetValue>0x00000018</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_BASE_FEATURE_TYPES_0</name>
						<addressOffset>0x0130</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_BASE_FEATURE_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_BASE_WEIGHT_TYPES_0</name>
						<addressOffset>0x0134</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_BASE_WEIGHT_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_BASE_CDMA_ID_0</name>
						<addressOffset>0x0138</addressOffset>
						<resetValue>0x00000003</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_BASE_CDMA_ID</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_MULTI_BATCH_MAX_0</name>
						<addressOffset>0x013C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_MULTI_BATCH_MAX</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_BS_THROUGHPUT_0</name>
						<addressOffset>0x0140</addressOffset>
						<resetValue>0x00000001</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_BS_THROUGHPUT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_BN_THROUGHPUT_0</name>
						<addressOffset>0x0144</addressOffset>
						<resetValue>0x00000001</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_BN_THROUGHPUT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SDP_EW_THROUGHPUT_0</name>
						<addressOffset>0x0148</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>SDP_EW_THROUGHPUT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PDP_RDMA_DESC_0</name>
						<addressOffset>0x014C</addressOffset>
						<resetValue>0x000E000A</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PDP_RDMA_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PDP_RDMA_CAP_INCOMPAT_0</name>
						<addressOffset>0x0150</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PDP_RDMA_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PDP_RDMA_CAP_COMPAT_0</name>
						<addressOffset>0x0154</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PDP_RDMA_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PDP_RDMA_BASE_ATOMIC_M_0</name>
						<addressOffset>0x0158</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PDP_RDMA_BASE_ATOMIC_M</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PDP_RDMA_BASE_PDP_ID_0</name>
						<addressOffset>0x015C</addressOffset>
						<resetValue>0x0000000B</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PDP_RDMA_BASE_PDP_ID</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PDP_DESC_0</name>
						<addressOffset>0x0160</addressOffset>
						<resetValue>0x0010000B</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PDP_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PDP_CAP_INCOMPAT_0</name>
						<addressOffset>0x0164</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PDP_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PDP_CAP_COMPAT_0</name>
						<addressOffset>0x0168</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PDP_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PDP_BASE_FEATURE_TYPES_0</name>
						<addressOffset>0x016C</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PDP_BASE_FEATURE_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PDP_BASE_THROUGHPUT_0</name>
						<addressOffset>0x0170</addressOffset>
						<resetValue>0x00000001</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>PDP_BASE_THROUGHPUT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDP_RDMA_DESC_0</name>
						<addressOffset>0x0174</addressOffset>
						<resetValue>0x000E000C</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDP_RDMA_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDP_RDMA_CAP_INCOMPAT_0</name>
						<addressOffset>0x0178</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDP_RDMA_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDP_RDMA_CAP_COMPAT_0</name>
						<addressOffset>0x017C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDP_RDMA_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDP_RDMA_BASE_ATOMIC_M_0</name>
						<addressOffset>0x0180</addressOffset>
						<resetValue>0x0008</resetValue>
						<resetMask>0x00FF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDP_RDMA_BASE_ATOMIC_M</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDP_RDMA_BASE_CDP_ID_0</name>
						<addressOffset>0x0184</addressOffset>
						<resetValue>0x0000000D</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDP_RDMA_BASE_CDP_ID</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDP_DESC_0</name>
						<addressOffset>0x0188</addressOffset>
						<resetValue>0x0010000D</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDP_DESC</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDP_CAP_INCOMPAT_0</name>
						<addressOffset>0x018C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDP_CAP_INCOMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDP_CAP_COMPAT_0</name>
						<addressOffset>0x0190</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDP_CAP_COMPAT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDP_BASE_FEATURE_TYPES_0</name>
						<addressOffset>0x0194</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0FFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDP_BASE_FEATURE_TYPES</name>
								<bitRange>[11:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CDP_BASE_THROUGHPUT_0</name>
						<addressOffset>0x0198</addressOffset>
						<resetValue>0x00000001</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CDP_BASE_THROUGHPUT</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>END_OF_LIST_0</name>
						<addressOffset>0x019C</addressOffset>
						<resetValue>0x00000000</resetValue>
						<resetMask>0xFFFFFFFF</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>END_OF_LIST</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>TLP</name>
			<version>1.0</version>
			<baseAddress>0x10000000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x000A</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0200</offset>
				<size>0x004D</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0400</offset>
				<size>0x0010</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0600</offset>
				<size>0x0200</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0800</offset>
				<size>0x0200</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>Apb_software_irq</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>software_irq_read</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>16</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>read</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>software_irq_set</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>16</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>set</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>software_irq_clear</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>16</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>clear</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Global_intr_router</name>
					<addressOffset>0x0200</addressOffset>
					<register>
						<name>irq_0_route_reg_0</name>
						<description>SysCtrl route register 0</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_0_route_reg_0</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_0_route_reg_1</name>
						<description>SysCtrl route register 1</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_0_route_reg_1</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_0_route_reg_2</name>
						<description>SysCtrl route register 2</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_0_route_reg_2</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_1_route_reg_0</name>
						<description>MPC route register 0</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_1_route_reg_0</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_1_route_reg_6</name>
						<description>MPC route register 6</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_1_route_reg_6</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_1_route_reg_4</name>
						<description>MPC route register 4</description>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_1_route_reg_4</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_2_route_reg_1</name>
						<description>HPC route register 1</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_2_route_reg_1</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_2_route_reg_0</name>
						<description>HPC route register 0</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_2_route_reg_0</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_2_route_reg_2</name>
						<description>HPC route register 2</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_2_route_reg_2</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_1_route_reg_1</name>
						<description>MPC route register 1</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_1_route_reg_1</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_1_route_reg_5</name>
						<description>MPC route register 5</description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_1_route_reg_5</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_1_route_reg_2</name>
						<description>MPC route register 2</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_1_route_reg_2</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_1_route_reg_3</name>
						<description>MPC route register 3</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_1_route_reg_3</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_2_route_reg_3</name>
						<description>HPC route register 3</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>irq_2_route_reg_3</name>
								<bitRange>[4:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>C2C_remap</name>
					<addressOffset>0x0400</addressOffset>
					<register>
						<name>c2c_remap_tx_addr</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c2c_remap_tx_addr</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c2c_remap_tx_mask</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c2c_remap_tx_mask</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c2c_remap_rx_addr</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c2c_remap_rx_addr</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c2c_remap_rx_mask</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c2c_remap_rx_mask</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Pad_config</name>
					<addressOffset>0x0600</addressOffset>
					<register>
						<name>eth_rx_clk</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00A0</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pull_down</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>pull_up</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>drive_strength</name>
								<bitRange>[4:2]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>eth_rxd</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pull_down</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>pull_up</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>drive_strength</name>
								<bitRange>[4:2]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>eth_rx_ctl</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x00A0</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pull_down</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>pull_up</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>drive_strength</name>
								<bitRange>[4:2]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>eth_tx_clk</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pull_down</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>pull_up</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>drive_strength</name>
								<bitRange>[4:2]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>eth_txd</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pull_down</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>pull_up</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>drive_strength</name>
								<bitRange>[4:2]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>eth_tx_ctl</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pull_down</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>pull_up</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>drive_strength</name>
								<bitRange>[4:2]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>eth_mdc</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x00A0</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pull_down</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>pull_up</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>drive_strength</name>
								<bitRange>[4:2]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>eth_mdio</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x00A0</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pull_down</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>pull_up</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>drive_strength</name>
								<bitRange>[4:2]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[7:7]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>c2c_tx_ack</name>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0200</resetValue>
						<resetMask>0x0000</resetMask>
						<size>10</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>pull_down_up</name>
								<description>Pull down 0
Pull up 1</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[9:9]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c2c_tx_vld</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>10</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>pull_down_up</name>
								<description>Pull down 0
Pull up 1</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[9:9]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c2c_tx_d</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0200</resetValue>
						<resetMask>0x0000</resetMask>
						<size>10</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>pull_down_up</name>
								<description>Pull down 0
Pull up 1</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[9:9]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c2c_rx_ack</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>10</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>pull_down_up</name>
								<description>Pull down 0
Pull up 1</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[9:9]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c2c_rx_vld</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0200</resetValue>
						<resetMask>0x0000</resetMask>
						<size>10</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>pull_down_up</name>
								<description>Pull down 0
Pull up 1</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[9:9]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c2c_rx_d</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>10</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>pull_down_up</name>
								<description>Pull down 0
Pull up 1</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[9:9]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>refclk</name>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x000F</resetValue>
						<resetMask>0x0000</resetMask>
						<size>4</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>drive_strength</name>
								<bitRange>[2:0]</bitRange>
							</field>
							<field>
								<name>enable</name>
								<bitRange>[3:3]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rst_mstr</name>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0200</resetValue>
						<resetMask>0x0000</resetMask>
						<size>10</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>pull_down_up</name>
								<description>Pull down 0
Pull up 1</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[9:9]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>rst_slv</name>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0200</resetValue>
						<resetMask>0x0000</resetMask>
						<size>10</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>output_enable</name>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>pull_down_up</name>
								<description>Pull down 0
Pull up 1</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>input_enable</name>
								<bitRange>[9:9]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>EMA</name>
					<addressOffset>0x0800</addressOffset>
					<register>
						<name>AI_mem_timing_mode</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0xFFFF</resetValue>
						<resetMask>0x0000</resetMask>
						<size>16</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>AI_mem_timing_mode</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>C2C_mem_timing_mode</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0xFFFF</resetValue>
						<resetMask>0x0000</resetMask>
						<size>16</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c2c_mem_timing_mode</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>dsp_mem_timing_mode</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0xFFFF</resetValue>
						<resetMask>0x0000</resetMask>
						<size>16</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>dsp_mem_timing_mode</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>eth_mem_timing_mode</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0xFFFF</resetValue>
						<resetMask>0x0000</resetMask>
						<size>16</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>eth_mem_timing_mode</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>hpc_mem_timing_mode</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0xFFFF</resetValue>
						<resetMask>0x0000</resetMask>
						<size>16</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>hpc_mem_timing_mode</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>mpc_mem_timing_mode</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0xFFFF</resetValue>
						<resetMask>0x0000</resetMask>
						<size>16</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>mpc_mem_timing_mode</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>sysctrl_mem_timing_mode</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0xFFFF</resetValue>
						<resetMask>0x0000</resetMask>
						<size>16</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>sysctrl_mem_timing_mode</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>HPC</name>
			<version>1.0</version>
			<baseAddress>0x14000000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00200000</offset>
				<size>0x00010000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00210000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00220000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00230000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x01000000</offset>
				<size>0x04000000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>CLINT</name>
					<addressOffset>0x00200000</addressOffset>
					<register>
						<name>msip</name>
						<description>Machine mode software interrupt (IPI)
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>msip_0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>msip_1</name>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>mtimecmp_0</name>
						<description>Machine mode timer compare register for Hart 0</description>
						<addressOffset>0x4000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>mtimecmp</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>mtime</name>
						<description>Timer register</description>
						<addressOffset>0xBFF8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>mtime</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>mtimecmp_1</name>
						<description>Machine mode timer compare register for Hart 0</description>
						<addressOffset>0x4008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>mtimecmp</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Timer</name>
					<addressOffset>0x00210000</addressOffset>
					<register>
						<name>timer0_timer</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer0_timer</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>timer1_timer</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer1_timer</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>timer0_ctrl</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>enable</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>prescaler</name>
								<bitRange>[5:3]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>timer0_cmp</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer0_cmp</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>timer1_ctrl</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>enable</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>prescaler</name>
								<bitRange>[5:3]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>timer1_cmp</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer1_cmp</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>l2_config</name>
					<addressOffset>0x00220000</addressOffset>
					<register>
						<name>l2_enable</name>
						<description>Enable L2 cache </description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>l2_enable</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>core_enable</name>
						<description>Enable shadow L1 caches in L2;NI </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>core_enable</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>l2_arbitration_priority</name>
						<description>Select L2 replacement algorithm; NI </description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>l2_arbitration_priority</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>l2_replacement_policy</name>
						<description>Select L2 core priority algorithm; NI </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>l2_replacement_policy</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>l2_arbitration_policy</name>
						<description>Select L2 core priorities; NI </description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>l2_arbitration_policy</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>cluster_config</name>
					<addressOffset>0x00230000</addressOffset>
					<register>
						<name>core0_bootaddr</name>
						<description>Core#0 boot address</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>core0_bootaddr</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>core1_bootaddr</name>
						<description>Core#1 boot address </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>core1_bootaddr</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>core0_hart_id</name>
						<description>Core#0 hart ID </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>core0_hart_id</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>core1_hart_id</name>
						<description>Core#1 hart ID </description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>core1_hart_id</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rtc_cfg0</name>
						<description>real time clock generator clock high count </description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>rtc_cfg0</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rtc_cfg1</name>
						<description>real time clock generator clock low count </description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>rtc_cfg1</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rtc_cfg2</name>
						<description>real time clock generator clock fine tune </description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>rtc_cfg2</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>irq_status</name>
						<description>interrupt flag statuses; NI </description>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>irq_status</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>force_irq</name>
						<description>force interrupt line active; NI </description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>force_irq</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>timer_base_addr</name>
						<description>Timer base address </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>timer_base_addr</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>timer_addr_length</name>
						<description>Timer address space length </description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>timer_addr_length</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>plic_base_addr</name>
						<description>PLIC base address </description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>plic_base_addr</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>clint_addr_length</name>
						<description>CLINT address space length </description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>clint_addr_length</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_addr_base2</name>
						<addressOffset>0x0180</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_addr_base2</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>non_idempotent_region_addr_base3</name>
						<addressOffset>0x0218</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>non_idempotent_region_addr_base3</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>non_idempotent_region_addr_base2</name>
						<addressOffset>0x0208</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>non_idempotent_region_addr_base2</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>non_idempotent_region_addr_base1</name>
						<addressOffset>0x01F8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>non_idempotent_region_addr_base1</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>non_idempotent_region_addr_base0</name>
						<description>Idempotent region base address </description>
						<addressOffset>0x01E8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>non_idempotent_region_addr_base0</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_length7</name>
						<addressOffset>0x01D8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_length7</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_length6</name>
						<addressOffset>0x01C8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_length6</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_length5</name>
						<addressOffset>0x01B8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_length5</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_length4</name>
						<addressOffset>0x01A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_length4</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_length3</name>
						<addressOffset>0x0198</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_length3</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_length2</name>
						<addressOffset>0x0188</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_length2</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_addr_base1</name>
						<addressOffset>0x0170</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_addr_base1</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_addr_base0</name>
						<description>Cached region base address </description>
						<addressOffset>0x0160</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_addr_base0</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_length7</name>
						<addressOffset>0x0150</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_length7</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_length6</name>
						<addressOffset>0x0140</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_length6</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_length5</name>
						<addressOffset>0x0130</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_length5</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_length4</name>
						<addressOffset>0x0120</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_length4</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_length3</name>
						<addressOffset>0x0110</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_length3</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_addr_base2</name>
						<addressOffset>0x00F8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_addr_base2</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_addr_base1</name>
						<addressOffset>0x00E8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_addr_base1</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_addrbase0</name>
						<description>Execution region base address </description>
						<addressOffset>0x00D8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_addrbase0</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_length2</name>
						<addressOffset>0x0100</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_length2</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>non_idempotent_region_length3</name>
						<addressOffset>0x0220</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>non_idempotent_region_length3</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>non_idempotent_region_length2</name>
						<addressOffset>0x0210</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>non_idempotent_region_length2</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>non_idempotent_region_length1</name>
						<addressOffset>0x0200</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>non_idempotent_region_length1</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>non_idempotent_region_length0</name>
						<description>Idempotent region address space length</description>
						<addressOffset>0x01F0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>non_idempotent_region_length0</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>nr_nonidempotent_region_rules</name>
						<description>Number of idempotent regions </description>
						<addressOffset>0x01E0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>nr_nonidempotent_region_rules</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_addr_base7</name>
						<addressOffset>0x01D0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_addr_base7</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_addr_base6</name>
						<addressOffset>0x01C0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_addr_base6</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_addr_base5</name>
						<addressOffset>0x01B0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_addr_base5</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_addr_base4</name>
						<addressOffset>0x01A0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_addr_base4</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_addr_base3</name>
						<addressOffset>0x0190</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_addr_base3</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_length1</name>
						<addressOffset>0x0178</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_length1</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>cached_region_length0</name>
						<addressOffset>0x0168</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>cached_region_length0</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>nr_cached_region_rules</name>
						<description>Number of cached regions </description>
						<addressOffset>0x0158</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>nr_cached_region_rules</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_addr_base7</name>
						<addressOffset>0x0148</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_addr_base7</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_addr_base6</name>
						<addressOffset>0x0138</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_addr_base6</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_addr_base5</name>
						<addressOffset>0x0128</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_addr_base5</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_addr_base4</name>
						<addressOffset>0x0118</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_addr_base4</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_addr_base3</name>
						<addressOffset>0x0108</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_addr_base3</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_length1</name>
						<addressOffset>0x00F0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_length1</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>execute_region_length0</name>
						<description>Execution region address space length </description>
						<addressOffset>0x00E0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>execute_region_length0</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>addr_valid_rule</name>
						<description>Valid address space flags </description>
						<addressOffset>0x00C8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>addr_valid_rule</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>dram_base_addr</name>
						<description>External memory base address </description>
						<addressOffset>0x00B8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>dram_base_addr</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>clustercfg_base_addr</name>
						<description>Cluster config base address </description>
						<addressOffset>0x00A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>clustercfg_base_addr</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>l2cfg_base_addr</name>
						<description>L2 cache config base address </description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>l2cfg_base_addr</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>debug_base_addr</name>
						<description>Debugger base address </description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>debug_base_addr</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>plic_addr_length</name>
						<description>PLIC address space length </description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>plic_addr_length</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rom_base_addr</name>
						<description>Internal RAM base address </description>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>rom_base_addr</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>clint_base_addr</name>
						<description>CLINT base address </description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>clint_base_addr</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>nr_execute_region_rules</name>
						<description>Number of execute regions </description>
						<addressOffset>0x00D0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>nr_execute_region_rules</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>dram_addr_length</name>
						<description>External memory address space length </description>
						<addressOffset>0x00C0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>dram_addr_length</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>clustercfg_addr_length</name>
						<description>Cluster config address space length </description>
						<addressOffset>0x00B0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>clustercfg_addr_length</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>l2cfg_addr_length</name>
						<description>L2 cache config address space length </description>
						<addressOffset>0x00A0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>l2cfg_addr_length</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>debug_addr_length</name>
						<description>Debugger address space length </description>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>debug_addr_length</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>rom_addr_length</name>
						<description>Internal RAM address space length </description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>64</size>
						<fields>
							<field>
								<name>rom_addr_length</name>
								<bitRange>[63:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>PLIC</name>
					<addressOffset>0x01000000</addressOffset>
					<register>
						<name>timer_0_int_priority_0</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer_0_int_priority_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>timer_0_int_priority_1</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer_0_int_priority_1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>timer_1_int_priority_0</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer_1_int_priority_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>timer_1_int_priority_1</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer_1_int_priority_1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>external_0_int_priority_0</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>external_0_int_priority_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>external_0_int_priority_1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>external_0_int_priority_1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>enable_context_0</name>
						<addressOffset>0x2000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer0_int0_enable</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>timer0_int1_enable</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>timer1_int0_enable</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>timer1_int1_enable</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>external_int0_enable</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>external_int1_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>enable_context_1</name>
						<addressOffset>0x2080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer0_int0_enable</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>timer0_int1_enable</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>timer1_int0_enable</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>timer1_int1_enable</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>external_int0_enable</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>external_int1_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>enable_context_2</name>
						<addressOffset>0x2100</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer0_int0_enable</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>timer0_int1_enable</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>timer1_int0_enable</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>timer1_int1_enable</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>external_int0_enable</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>external_int1_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>enable_context_3</name>
						<addressOffset>0x2180</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>timer0_int0_enable</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>timer0_int1_enable</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>timer1_int0_enable</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>timer1_int1_enable</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>external_int0_enable</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>external_int1_enable</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>priority_threshold_context_0</name>
						<addressOffset>0x00200000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>priority_threshold_context_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>priority_threshold_context_1</name>
						<addressOffset>0x00201000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>priority_threshold_context_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>priority_threshold_context_2</name>
						<addressOffset>0x00202000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>priority_threshold_context_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>priority_threshold_context_3</name>
						<addressOffset>0x00203000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>priority_threshold_context_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>claim_complete_context_0</name>
						<addressOffset>0x00200004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>claim_complete_context_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>claim_complete_context_1</name>
						<addressOffset>0x00201004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>claim_complete_context_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>claim_complete_context_2</name>
						<addressOffset>0x00202004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>claim_complete_context_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>claim_complete_context_3</name>
						<addressOffset>0x00203004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>claim_complete_context_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>SYSCTRL</name>
			<version>1.0</version>
			<baseAddress>0x1A000000</baseAddress>
			<addressBlock>
				<offset>0x00101000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00102000</offset>
				<size>0x2000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00105000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00106000</offset>
				<size>0x3000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00109000</offset>
				<size>0x2000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0010B000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0010F000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00110000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00120000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00104000</offset>
				<size>0x00D0</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x001040D0</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x001040F0</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00104110</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00104130</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00104150</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00104170</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x001041B0</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x001041D0</offset>
				<size>0x0008</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>GPIO</name>
					<addressOffset>0x00101000</addressOffset>
					<register>
						<name>DIR</name>
						<description>GPIO direction configuration bitfield:
- bit[i]=1’b0: Input mode for GPIO[i]
- bit[i]=1’b1: Output mode for GPIO[i]
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DIR</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>EN</name>
						<description>GPIO clock enable config register.
Bit 31 - 0 GPIOEN (R/W) GPIO[31:0] clock enable configuration bitfield:
- bit[i]=1’b0: disable clock for GPIO[i]
- bit[i]=1’b1: enable clock for GPIO[i]
GPIOs are gathered by groups of 4. The clock gating of one group is done only if
all 4 GPIOs are disabled.
Clock must be enabled for a GPIO if it’s direction is configured in input mode.</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>GPIOEN</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IN</name>
						<description>GPIO Data IN register. Bit 31 - 0 DATA_IN (R) GPIO[31:0] input data read bitfield. DATA_IN[i] corresponds to input data of GPIO[i].</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>DATA_IN</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>OUT</name>
						<description>GPIO Data out register. Bit 31 - 0 DATA_OUT (R/W) GPIO[31:0] output data read bitfield. DATA_OUT[i] corresponds to output data set on GPIO[i].</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATA_OUT</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_0_3</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_CFG_0</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_1</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_2</name>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_3</name>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_4_7</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_CFG_4</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_5</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_6</name>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_7</name>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_8_11</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_CFG_8</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_9</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_10</name>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_11</name>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_12_15</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_CFG_12</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_13</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_14</name>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_15</name>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>UDMA</name>
					<addressOffset>0x00102000</addressOffset>
					<register>
						<name>CTRL_CFG_CG</name>
						<description>uDMA peripherals clock gate configuration

Bitfields Defines uDMA peripherals clock gate configuration for corresponding peripheral</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CG_UART</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>CG_SPIM</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>CG_I2C0</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>CG_I2C1</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>CG_SDIO</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>CG_I2S</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>CG_CAM</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>CG_FILTER</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CTRL_CFG_EVENT</name>
						<description>uDMA peripherals external event configuration
</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMP_EVT0</name>
								<description> Forward event with ID matching CMP_EVT0 to peripherals as
event0
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>CMP_EVT1</name>
								<description>Forward event with ID matching CMP_EVT1 to peripherals as
event1
</description>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>CMP_EVT2</name>
								<description>Forward event with ID matching CMP_EVT2 to peripherals as
event2</description>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>CMP_EVT3</name>
								<description>Forward event with ID matching CMP_EVT3 to peripherals as
event3</description>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CTRL_CFG_RST</name>
						<description>uDMA peripherals reset trigger (unimplemented)
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CTRL_CFG_RST</name>
								<description>uDMA peripherals reset trigger
(unimplemented)
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_RX_SADDR</name>
						<description>uDMA RX UART buffer
base address configuration
register</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SADDR</name>
								<description> RX buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets RX buffer base address
</description>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_RX_SIZE</name>
						<description>uDMA RX UART buffer size configuration register</description>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SIZE</name>
								<description> RX buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.</description>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_RX_CFG</name>
						<description>uDMA RX UART stream
configuration register</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>RX channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>RX channel enable and start transfer bitfield:
-1'b0: disable
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>RX channel clear and stop transfer:
-1'b0: disable
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_TX_SADDR</name>
						<description>uDMA TX UART buffer
base address configuration
register.</description>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SADDR</name>
								<description>TX buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets buffer base address
</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_TX_SIZE</name>
						<description>uDMA TX UART buffer
size configuration register</description>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SIZE</name>
								<description>TX buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.
</description>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_TX_CFG</name>
						<description>uDMA TX UART stream
configuration register.</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description> TX channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>TX channel enable and start transfer bitfield:
-1'b0: disabled
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>TX transfer pending in queue status flag:
-1'b0: no pending transfer in the queue
-1'b1: pending transfer in the queue
</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>RX channel clear and stop transfer:
-1'b0: disable
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_ERROR</name>
						<description>uDMA UART Error status</description>
						<addressOffset>0x00A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RX_ERR_OVERFLOW</name>
								<description>RX overflow error status flag:
- 1'b0: no error
- 1'b1: RX overflow error occurred
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RX_ERR_PARITY</name>
								<description>RX parity error status flag:
- 1'b0: no error
- 1'b1: RX parity error occurred</description>
								<bitRange>[1:1]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_RX_SIZE</name>
						<description>RX SPI uDMA
transfer size of
buffer</description>
						<addressOffset>0x0104</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-writeOnce</access>
						<fields>
							<field>
								<name>RX_SIZE</name>
								<description>Buffer size in bytes. (1MBytes maximum)
- Read: buffer size left
- Write: set buffer size
</description>
								<bitRange>[19:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_DATA</name>
						<description>RX read data for polling or interrupt</description>
						<addressOffset>0x00B4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>BYTE</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_RX_SADDR</name>
						<description>RX SPI uDMA
transfer address of
associated buffer</description>
						<addressOffset>0x0100</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address
</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_STATUS</name>
						<description>uDMA UART status register</description>
						<addressOffset>0x00A0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>TX_BUSY</name>
								<description>TX busy status flag:
- 1'b0: no TX transfer on-going
- 1'b1: TX transfer on-going</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RX_BUSY</name>
								<description>RX busy status flag:
- 1'b0: no RX transfer on-going
- 1'b1: RX transfer on-going
</description>
								<bitRange>[1:1]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_IRQ_EN</name>
						<description>uDMA UART Read or Error interrupt enable register</description>
						<addressOffset>0x00AC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX</name>
								<description>Rx interrupt in enable flag:
- 1'b0: RX IRQ disable
- 1'b1: RX IRQ enable
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ERROR</name>
								<description>Error interrupt in enable flag:
- 1'b0: Error IRQ disable
- 1'b1: Error IRQ enable
</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_VALID</name>
						<description>uDMA UART Read polling
data valid flag register</description>
						<addressOffset>0x00B0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>READY</name>
								<description>Used only in RX polling method to indicate data is ready for read:
- 1'b0: Data is not ready to read
- 1'b1: Data is ready to read</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_CMD_SADDR</name>
						<description>CMD SPI uDMA
transfer address of
associated buffer</description>
						<addressOffset>0x0120</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMD_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_TX_SADDR</name>
						<description>TX SPI uDMA
transfer address of
associated buffer</description>
						<addressOffset>0x0110</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_CMD_SIZE</name>
						<description>CMD SPI uDMA
transfer size of
buffer</description>
						<addressOffset>0x0124</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMD_SIZE</name>
								<description>Buffer size in bytes. (1MBytes maximum)
- Read: buffer size left
- Write: set buffer size
</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_TX_SIZE</name>
						<description>TX SPI uDMA
transfer size of
buffer</description>
						<addressOffset>0x0114</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SIZE</name>
								<description>Buffer size in bytes. (1MBytes maximum)
- Read: buffer size left
- Write: set buffer size
</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_CMD_CFG</name>
						<description>CMD SPI uDMA
transfer configuration</description>
						<addressOffset>0x0128</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_SETUP</name>
						<description>UDMA UART configuration register.</description>
						<addressOffset>0x00A4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PARITY_ENA</name>
								<description>Parity bit generation and check configuration bitfield:
- 1'b0: disabled
- 1'b1: enabled
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>BIT_LENGTH</name>
								<description>Character length bitfield:
- 2'b00: 5 bits
- 2'b01: 6 bits
- 2'b10: 7 bits
- 2'b11: 8 bits
</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>STOP_BITS</name>
								<description> Stop bits length bitfield:
- 1'b0: 1 stop bit
- 1'b1: 2 stop bits
</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>POLLING_EN</name>
								<description>When in uart read, use polling method to read the data, read
interrupt enable flag will be ignored:
- 1'b0: Do not using polling method to read data.
- 1'b1: Using polling method to read data. Interrupt enable flag will be ignored.</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>CLEAN_FIFO</name>
								<description>In all mode clean the RX fifo, set 1 then set 0 to realize a reset
fifo:
- 1'b0: Stop Clean the RX FIFO.
- 1'b1: Clean the RX FIFO.</description>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>TX_ENA</name>
								<description> TX transceiver configuration bitfield:
- 1'b0: disabled
- 1'b1: enabled
</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>RX_ENA</name>
								<description>RX transceiver configuration bitfield:
- 1'b0: disabled
- 1'b1: enabled</description>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>CLKDIV</name>
								<description>UART Clock divider configuration bitfield. The baudrate is equal to
SOC_FREQ/CLKDIV.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_TX_CFG</name>
						<description>TX SPI uDMA
transfer configuration</description>
						<addressOffset>0x0118</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_RX_CFG</name>
						<description>RX SPI uDMA
transfer configuration</description>
						<addressOffset>0x0108</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH0_LEN1</name>
						<description>FILTER tx channel  length2 register</description>
						<addressOffset>0x040C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_LEN1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH0_CFG</name>
						<description>FILTER tx channel  configuration register</description>
						<addressOffset>0x0404</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIZE</name>
								<description> Data transfer format:
- 2'b00: 8-bit
- 2'b01:16-bit
- 2;b10:32-bit</description>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>MODE</name>
								<description>Data transfer mode:
- 2'b00: Linear
- 2'b01: Sliding
- 2;b10:Circular
- 2;b11:2D
</description>
								<bitRange>[9:8]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>LINEAR</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SLIDING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CIRCULAR</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>2D</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH0_LEN2</name>
						<description>FILTER tx channel 0 length2 register</description>
						<addressOffset>0x0410</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_LEN2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH0_LEN0</name>
						<description>FILTER tx channel length1 register</description>
						<addressOffset>0x0408</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_ADD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH0_ADD</name>
						<description>FILTER tx channel address register</description>
						<addressOffset>0x0400</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_ADD</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH1_ADD</name>
						<description>FILTER tx channel address register</description>
						<addressOffset>0x0414</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_ADD</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH1_CFG</name>
						<description>FILTER tx channel  configuration register</description>
						<addressOffset>0x0418</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIZE</name>
								<description> Data transfer format:
- 2'b00: 8-bit
- 2'b01:16-bit
- 2;b10:32-bit</description>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>MODE</name>
								<description>Data transfer mode:
- 2'b00: Linear
- 2'b01: Sliding
- 2;b10:Circular
- 2;b11:2D
</description>
								<bitRange>[9:8]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SLIDING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LINEAR</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CIRCULAR</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>2D</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH1_LEN0</name>
						<description>FILTER tx channel length1 register</description>
						<addressOffset>0x041C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_ADD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH1_LEN1</name>
						<description>FILTER tx channel  length2 register</description>
						<addressOffset>0x0420</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_LEN1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_FILT_CMD</name>
						<description>FILTER start register</description>
						<addressOffset>0x045C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>Filter start flag, write only, write 1 to start the filter :</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_BINCU_VAL</name>
						<description>FILTER binarization result
count register</description>
						<addressOffset>0x0454</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>REG_BINCU_VAL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_BINCU_CNT</name>
						<description>FILTER binarization count register</description>
						<addressOffset>0x044C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>COUNT</name>
								<description> Binarization and counting unit count value set.</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>Binarization and counting unit enable:
-1'b0: not enable
-1'b1: enable</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AU_REG1</name>
						<description>FILTER arithmetic unit 1 register</description>
						<addressOffset>0x0444</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_AU_REG1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AU_CFG</name>
						<description>FILTER arithmetic unit configuration register</description>
						<addressOffset>0x043C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIGNED</name>
								<description>Arithmetic Unit result signed or not.
-1'b0: not signed
-1'b1: signed
</description>
								<bitRange>[0:0]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>NOT_SIGNED</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SIGNED</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BYPASS</name>
								<description>Arithmetic Unit bypass or not.
-1'b0: not bypass AU
-1'b1: bypass AU</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>Arithmetic Unit mode:
-4'b0000: AU_MODE_AxB
-4'b0001: AU_MODE_AxB+REG0
-4'b0010: AU_MODE_AxB accumulation
-4'b0011: AU_MODE_AxA
-4'b0100: AU_MODE_AxA+B
-4'b0101: AU_MODE_AxA-B
-4'b0110: AU_MODE_AxA accumulation
-4'b0111: AU_MODE_AxA+REG0
-4'b1000: AU_MODE_AxREG1
-4'b1001: AU_MODE_AxREG1+B
-4'b1010: AU_MODE_AxREG1-B
-4'b1011: AU_MODE_AxREG1+REG0
-4'b1100: AU_MODE_AxREG1 accumulation
-4'b1101: AU_MODE_A+B
-4'b1110: AU_MODE_A-B
-4'b1111: AU_MODE_A+REG0
</description>
								<bitRange>[11:8]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>AU_MODE_AxB</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxBplusREG0</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxB_accumulation</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxA</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxAplusB</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxAminusB</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxA_accumulation</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxAplusREG0</name>
										<value>7</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1</name>
										<value>8</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1plusB</name>
										<value>9</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1minusB</name>
										<value>10</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1plusREG0</name>
										<value>11</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1_accumulation</name>
										<value>12</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AplusB</name>
										<value>13</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AminusB</name>
										<value>14</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AplusREG0</name>
										<value>15</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>SHIFT</name>
								<description> Arithmetic Unit shift window size, (0 – 31).</description>
								<bitRange>[20:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_RX_CH_LEN1</name>
						<description>FILTER RX channel length1 register</description>
						<addressOffset>0x0434</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_LEN1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_RX_CH_CFG</name>
						<description>FILTER RX channel configuration register</description>
						<addressOffset>0x042C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIZE</name>
								<description> Data transfer format:
- 2'b00: 8-bit
- 2'b01:16-bit
- 2;b10:32-bit</description>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>MODE</name>
								<description>Data transfer mode:
- 2'b00: Linear
- 2'b01: Sliding
- 2;b10:Circular
- 2;b11:2D
</description>
								<bitRange>[9:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>SLIDING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LINEAR</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CIRCULAR</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>2D</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TX_CH1_LEN2</name>
						<description>FILTER RX channel configuration register</description>
						<addressOffset>0x0424</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_LEN2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_STATUS</name>
						<description>FILTER status register</description>
						<addressOffset>0x0460</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DONE</name>
								<description> Filter done flag, write 1 to clear the flag :
-1'b0: Filter process is not finished
-1'b1: Filter process is finished</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_FILT</name>
						<description>FILTER control
mode register</description>
						<addressOffset>0x0458</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_FILT</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_BINCU_SETUP</name>
						<description>FILTER binarization result count register</description>
						<addressOffset>0x0450</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_BINCU_SETUP</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_BINCU_TH</name>
						<description>FILTER binarization threshold register</description>
						<addressOffset>0x0448</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_BINCU_TH</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AU_REG0</name>
						<description>FILTER arithmetic unit 0 register</description>
						<addressOffset>0x0440</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_AU_REG0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_RX_CH_LEN2</name>
						<description>FILTER RX channel length2 register</description>
						<addressOffset>0x0438</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_LEN2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_RX_CH_LEN0</name>
						<description>FILTER RX channel configuration register</description>
						<addressOffset>0x0430</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_LEN0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_RX_CH_ADD</name>
						<description>FILTER RX channel address register</description>
						<addressOffset>0x0428</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_ADD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>AdvancedTimer</name>
					<addressOffset>0x00105000</addressOffset>
					<register>
						<name>T0_CMD</name>
						<description>ADV_TIMER0 command register</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER0 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER0 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER0 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER0 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER0 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_CONFIG</name>
						<description>ADV_TIMER0 configuration register.</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER0 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER0 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER0 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER0 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER0 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_THRESHOLD</name>
						<description>ADV_TIMER0 threshold configuration register.
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER0 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER0 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL0</name>
						<description>ADV_TIMER0 channel 0 threshold configuration register</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL1</name>
						<description>ADV_TIMER0 channel 1 threshold configuration register</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL2</name>
						<description>ADV_TIMER0 channel 2 threshold configuration register</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 2 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 2 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL3</name>
						<description>ADV_TIMER0 channel 3 threshold configuration register</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_COUNTER</name>
						<description>ADV_TIMER0 counter register</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>T0_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_CMD</name>
						<description>ADV_TIMER1 command register</description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER1 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER1 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER1 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER1 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER1 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_CONFIG</name>
						<description>ADV_TIMER1 configuration register</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER1 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER1 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER1 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER1 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER1 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_THRESHOLD</name>
						<description>ADV_TIMER1 threshold configuration register</description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER1 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER1 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL0</name>
						<description>ADV_TIMER1 channel 0 threshold configuration register</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER1 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER1 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL1</name>
						<description>ADV_TIMER1 channel 1 threshold configuration register</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER1 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER1 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL2</name>
						<description>ADV_TIMER1 channel 2 threshold configuration register</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL3</name>
						<description>ADV_TIMER1 channel 3 threshold configuration register</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER1 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER1 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_COUNTER</name>
						<description>ADV_TIMER1 counter register</description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>T1_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_CMD</name>
						<description>ADV_TIMER2 command register</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER2 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER2 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER2 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER2 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER2 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_CONFIG</name>
						<description>ADV_TIMER2 configuration register</description>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER2 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER2 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER2 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER2 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER2 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_THRESHOLD</name>
						<description>ADV_TIMER2 threshold configuration register</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER2 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER2 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL0</name>
						<description>ADV_TIMER2 channel 0 threshold configuration register</description>
						<addressOffset>0x008C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL1</name>
						<description>ADV_TIMER2 channel 1 threshold configuration register</description>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL2</name>
						<description>ADV_TIMER2 channel 2 threshold configuration register</description>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 2 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 2 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL3</name>
						<description>ADV_TIMER2 channel 3 threshold configuration register</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_COUNTER</name>
						<description>ADV_TIMER2 counter register</description>
						<addressOffset>0x00AC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>T2_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_CMD</name>
						<description>ADV_TIMER3 command register</description>
						<addressOffset>0x00C0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER3 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER3 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER3 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER3 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER3 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_CONFIG</name>
						<description>ADV_TIMER3 configuration register</description>
						<addressOffset>0x00C4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER3 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER3 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER3 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER3 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER3 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_THRESHOLD</name>
						<description>ADV_TIMER3 threshold configuration register</description>
						<addressOffset>0x00C8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER3 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER3 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL0</name>
						<description>ADV_TIMER3 channel 0 threshold configuration register</description>
						<addressOffset>0x00CC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL1</name>
						<description>ADV_TIMER3 channel 1 threshold configuration register</description>
						<addressOffset>0x00D0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL2</name>
						<description>ADV_TIMER3 channel 2 threshold configuration register</description>
						<addressOffset>0x00D4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 2 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 2 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL3</name>
						<description>ADV_TIMER3 channel 3 threshold configuration register</description>
						<addressOffset>0x00D8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>CG</name>
						<description>ADV_TIMERS channels clock gating configuration register.
</description>
						<addressOffset>0x0104</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ENA</name>
								<description>ADV_TIMER clock gating configuration bitfield.
- ENA[i]=0: clock gate ADV_TIMERi.
- ENA[i]=1: enable ADV_TIMERi.</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_COUNTER</name>
						<description>ADV_TIMER3 counter register</description>
						<addressOffset>0x00EC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>T3_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>EVENT_CFG</name>
						<description>ADV_TIMERS events configuration register.</description>
						<addressOffset>0x0100</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EVENT_CFG</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>SocEventGenerator</name>
					<addressOffset>0x00106000</addressOffset>
					<register>
						<name>SW_EVENT</name>
						<description>SoC software events trigger
register</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>EVENT</name>
								<description>Writing a one-hot value into EVENT triggers a SoC software event. 8 software events are available.
</description>
								<bitRange>[7:0]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK0</name>
						<description>Events 0-31 dispatch mask
to FC

</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK0</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK1</name>
						<description>Events 32-63 dispatch mask
to FC</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK1</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK2</name>
						<description>Events 64-95 dispatch mask
to FC</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK2</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK3</name>
						<description>Events 96-127 dispatch
mask to FC</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK3</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK4</name>
						<description>Events 128-159 dispatch
mask to FC</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK4</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK5</name>
						<description>Events 160-191 dispatch
mask to FC</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK5</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK6</name>
						<description>Events 191-223 dispatch mask to FC
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK6</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK7</name>
						<description>F Events 224-255 dispatch
mask to peripherals
</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK7</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK1</name>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK1</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK2</name>
						<description>Events 0-31 dispatch mask to peripheralsEvents 64-95 dispatch mask to peripherals</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK2</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK3</name>
						<description>Events 96-127 dispatch mask to peripherals
</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK3</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK4</name>
						<description>Events 128-159 dispatch mask to peripheral</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK4</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK5</name>
						<description>Events 160-191 dispatch
mask to peripherals</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK5</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK6</name>
						<description>Events 191-223 dispatch mask to peripherals</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK6</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK7</name>
						<description>Events 224-255 dispatch mask to peripherals
</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK7</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR0</name>
						<description>Events 0-31 event queue
overflow</description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR0</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK0</name>
						<description>Events 0-31 dispatch mask to peripherals</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR1</name>
						<description>Events 32-63 event queue
overflow</description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR1</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR2</name>
						<description>Events 64-95 event queue
overflow</description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR02</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR3</name>
						<description>Events 96-127 event queue
overflow</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR3</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR4</name>
						<description>Events 128-159 event queue
overflow</description>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR4</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR5</name>
						<description>Events 160-191 event queue
overflow</description>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR5</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR6</name>
						<description>Events 191-223 event queue
overflow</description>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR6</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TIMER_HI</name>
						<description>Trigger Timer HI of APB
Timer with event</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>TIMER_HI_EVENT</name>
								<description>Trigger and start APB Timer HI by the event with id
that equals TIMER_HI_EVENT
</description>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR7</name>
						<description>Events 224-255 event queue overflow
</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR7</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TIMER_LO</name>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>TIMER_LO_EVENT</name>
								<description>Trigger and start APB Timer LO by the event with id
that equals TIMER_LO_EVENT
</description>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>EventInterruptUnit</name>
					<addressOffset>0x00109000</addressOffset>
					<register>
						<name>MASK_read</name>
						<description>This register contains the MASK (interrupt enable) for each of the 32 interrupts or events.

Writing to 0x1A10_9004 sets the bits of the MASK register selected
Writing to 0x1A10_9008 clears the bits of the MASK register selected.
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>MASK</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MASK_set</name>
						<description>This register contains the MASK (interrupt enable) for each of the 32 interrupts or events. Writing to 0x1A10_9004 sets the bits of the MASK register selected.
Writing to 0x1A10_9008 clears the bits of the MASK register selected.
</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>MASK_set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MASK_clear</name>
						<description>This register contains the MASK (interrupt enable) for each of the 32 interrupts or events. Writing to 0x1A10_9004 sets the bits of the MASK register selected.
Writing to 0x1A10_9008 clears the bits of the MASK register selected.
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>MASK_clear</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INT_read</name>
						<description>This register contains the pending interrupts or events. Writing to 0x1A10_9010
sets the bits of the INT register selected. Writing to 0x1A10_9014 clears the bits of
the INT register selected.</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>INT_read</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INT_set</name>
						<description>INT_read</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>INT_set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INT_clear</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>INT_clear</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ACK_read</name>
						<description>This register contains the ACK (interrupt enable) for each of the 32 interrupts
or events. Writing to 0x1A10_901C sets the bits of the ACK register selected. Writing
to 0x1A10_9020 clears the bits of the ACK register selected.
</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>ACK_read</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ACK_set</name>
						<description>This register contains the ACK (interrupt enable) for each of the 32 interrupts
or events. Writing to 0x1A10_901C sets the bits of the ACK register selected. Writing
to 0x1A10_9020 clears the bits of the ACK register selected.
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>ACK_set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ACK_clear</name>
						<description>This register contains the ACK (interrupt enable) for each of the 32 interrupts
or events. Writing to 0x1A10_901C sets the bits of the ACK register selected. Writing
to 0x1A10_9020 clears the bits of the ACK register selected.
</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>ACK_clear</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FIFO_DATA</name>
						<description>Fifo Content.

This is a read-only register that contain the first valid value of the FIFO.
</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>FIFO_DATA</name>
								<description>This is a read-only register that contain the first valid value of the FIFO</description>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Timer</name>
					<addressOffset>0x0010B000</addressOffset>
					<register>
						<name>CFG_LO</name>
						<description>Timer Low Configuration register
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EN</name>
								<description>Timer enable (starts couting) bit
</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>RST</name>
								<description>Timer low reset, cleared after the reset happened
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>IRQEN</name>
								<description>Timer low interrupt generation on compare match enable</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>Timer low continuous mode configuration

0b0: Continue incrementing timer low counter after a compare match with CMP_LO

0b1: Reset timer to after a compare match with CMP_LO
</description>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>ONES</name>
								<description>Timer low one shot configuration</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PEN</name>
								<description>Timer low prescaler enable bit</description>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>CCFG</name>
								<description>Timer low clock source configuration

0b0: FLL or FLL plus Prescaler
0b1: 32 kHz reference clock</description>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PVAL</name>
								<description>Timer low prescaler value. ftimer = fclk/(1 + P V AL)</description>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>CASC</name>
								<description> Timer low and Timer high 64-bit cascaded mode enable bit</description>
								<bitRange>[31:31]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CFG_HI</name>
						<description>Timer High Configuration
register</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EN</name>
								<description>Timer enable (starts couting) bit
</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>RST</name>
								<description>Timer high reset, cleared after the reset happened
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>IRQEN</name>
								<description>Timer hi interrupt generation on compare match enable</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>Timer hi continuous mode configuration

0b0: Continue incrementing timer hi counter after a compare match with CMP_HI

0b1: Reset timer to after a compare match with CMP_HI
</description>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>ONES</name>
								<description>Timer hi one shot configuration</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PEN</name>
								<description>Timer hi prescaler enable bit</description>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>CCFG</name>
								<description>Timer hi clock source configuration

0b0: FLL or FLL plus Prescaler
0b1: 32 kHz reference clock</description>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PVAL</name>
								<description>Timer hi prescaler value. ftimer = fclk/(1 + PVAL)</description>
								<bitRange>[15:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CNT_LO</name>
						<description>Timer Low counter value register</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CNT_LO</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CNT_HI</name>
						<description>Timer High counter value register</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CNT_HI</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CMP_LO</name>
						<description>Timer Low comparator value register
</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMP_LO</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CMP_HI</name>
						<description>Timer High comparator value register</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMP_HI</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>START_LO</name>
						<description>Start Timer Low counting register</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START_LO</name>
								<description>Timer high start command (sets EN in CFG_LO)</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>START_HI</name>
						<description>Start Timer High counting register
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START_HI</name>
								<description>Timer high reset command (writes RST in CFG_LO)</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RESET_LO</name>
						<description>Reset Timer Low counter register</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RESET_LO</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RESET_HI</name>
						<description>Reset Timer High counter register</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RESET_HI</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>SDIO</name>
					<addressOffset>0x00120000</addressOffset>
					<register>
						<name>CMD_OP</name>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>RSP_TYPE</name>
								<description>Values for RSP_TYPE:

3'b000: RSP_TYPE_NULL 
3'b001: RSP_TYPE_48_CRC
3'b010:  RSP_TYPE_48_NOCRC
3'b011: RSP_TYPE_136
3'b100: RSP_TYPE_48_BSY</description>
								<bitRange>[2:0]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>RSP_TYPE_NULL</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RSP_TYPE_48_CRC</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RSP_TYPE_48_NOCRC</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RSP_TYPE_136</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RSP_TYPE_48_BSY</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CMD_OPCODE</name>
								<bitRange>[13:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CMD_ARG</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>CMD_ARGUMENT</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DATA_SETUP</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>EN</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>RWN</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>QUAD</name>
								<bitRange>[7:2]</bitRange>
							</field>
							<field>
								<name>Block_Num</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>BLOCK_SIZE</name>
								<bitRange>[25:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>START</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>START</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STOP</name>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>STOP</name>
								<bitRange>[31:31]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RSP0</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RESPONSE_WORD0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CID3</name>
						<description>Card Identification Word 3</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>card_id_word3</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CID1</name>
						<description>Card Identification Word 1</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>card_id_word1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS</name>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EOT</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>ERR</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>CARD_ERR</name>
								<bitRange>[11:2]</bitRange>
							</field>
							<field>
								<name>VHS</name>
								<description>Note: 
Is reset value correct?</description>
								<bitRange>[15:12]</bitRange>
							</field>
							<field>
								<name>Status</name>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RSP3</name>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RESPONSE_WORD3</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RSP1</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RESPONSE_WORD1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RCA</name>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RCA</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CID2</name>
						<description>Card Identification Word 2</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>card_id_word2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CID0</name>
						<description>Card Identification Word0 </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>card_id_word0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLK_DIV_0</name>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Div_count</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Valid</name>
								<bitRange>[8:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RSP2</name>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RESPONSE_WORD2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>SocControl_TTA_PLL</name>
					<addressOffset>0x00104000</addressOffset>
					<register>
						<name>INFO</name>
						<description>This register holds the number of clusters and the number of cores in the each
cluster.
 It is a read-only register.
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00040000</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-writeOnce</access>
						<fields>
							<field>
								<name>cluster_count</name>
								<description>Number of Clusters </description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>core_count</name>
								<description>Number of Cores</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FCBOOT</name>
						<description>This register holds the boot address.</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x1A000080</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FCBOOT</name>
								<description>Boot Start address</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FCFETCH</name>
						<description>This register contains the value of the fetch enable signal of the core.
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>FCFETCH</name>
								<description>Enable Fetch,  1 to enable core execution</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_MUX_0</name>
						<description>The content of these registers can be used to multiplex pads when targeting an ASIC. 

The first register (0x1A10_4010) can be used to set the mux (2 bit
select) from pin 0 (bits [1:0]) to 15 (bits [31:30]).</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pad_0</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>pad_1</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>pad_2</name>
								<bitRange>[5:4]</bitRange>
							</field>
							<field>
								<name>pad_3</name>
								<bitRange>[7:6]</bitRange>
							</field>
							<field>
								<name>pad_4</name>
								<bitRange>[9:8]</bitRange>
							</field>
							<field>
								<name>pad_5</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>pad_6</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>pad_7</name>
								<bitRange>[15:14]</bitRange>
							</field>
							<field>
								<name>pad_8</name>
								<bitRange>[17:16]</bitRange>
							</field>
							<field>
								<name>pad_9</name>
								<bitRange>[19:18]</bitRange>
							</field>
							<field>
								<name>pad_10</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>pad_11</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>pad_12</name>
								<bitRange>[25:24]</bitRange>
							</field>
							<field>
								<name>pad_13</name>
								<bitRange>[27:26]</bitRange>
							</field>
							<field>
								<name>pad_14</name>
								<bitRange>[29:28]</bitRange>
							</field>
							<field>
								<name>pad_15</name>
								<bitRange>[31:30]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLUSTER_BOOT_ADDR0</name>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CLUSTER_BOOT_ADDR0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CS_RO</name>
						<addressOffset>0x00C0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CS_RO</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>BOOTSEL</name>
						<description>Boot Sel value
</description>
						<addressOffset>0x00C4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>bootsel_pad</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLUSTER_BOOT_ADDR1</name>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CLUSTER_BOOT_ADDR1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>JTAGREG</name>
						<description>Register to read or write from JTAG</description>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>jtag_reg_write</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>jtag_reg_read</name>
								<bitRange>[15:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CTRL_PER</name>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Sel_hyper_axi</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CLKSEL</name>
						<addressOffset>0x00C8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CLKSEL</name>
								<description>Irrelevant. Select FLL clock. Sysctrl does not have FLL
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CORESTATUS</name>
						<description>These 2 registers (CORESTATUS, CS_RO) contain the status of the system for testing/verification purposes like End Of Computation. The 0x1A10_40C0 register is read-only.</description>
						<addressOffset>0x00A0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CORE_STATUS</name>
								<bitRange>[1:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLUSTER_IRQ</name>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Cluster_IRQ</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_1</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x8C012003</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_3_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_3_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_3_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_3_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_3_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_3_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_3_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_3_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>PAD_4_drive_strength</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>PAD_4_trigger</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>PAD_4_rate</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>PAD_4_output_en</name>
								<description>0: Enable</description>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>PAD_4_hold</name>
								<bitRange>[16:16]</bitRange>
							</field>
							<field>
								<name>PAD_4_pull_enable</name>
								<bitRange>[17:17]</bitRange>
							</field>
							<field>
								<name>PAD_4_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[18:18]</bitRange>
							</field>
							<field>
								<name>PAD_4_input_en</name>
								<bitRange>[19:19]</bitRange>
							</field>
							<field>
								<name>PAD_5_drive_strength</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>PAD_5_trigger</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>PAD_5_rate</name>
								<bitRange>[24:24]</bitRange>
							</field>
							<field>
								<name>PAD_5_output_en</name>
								<description>0: Enable</description>
								<bitRange>[25:25]</bitRange>
							</field>
							<field>
								<name>PAD_5_hold</name>
								<bitRange>[26:26]</bitRange>
							</field>
							<field>
								<name>PAD_5_pull_enable</name>
								<bitRange>[27:27]</bitRange>
							</field>
							<field>
								<name>PAD_5_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[28:28]</bitRange>
							</field>
							<field>
								<name>PAD_5_input_en</name>
								<bitRange>[29:29]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLUSTER_CTRL</name>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0009</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>bypass</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>POW</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>fetch_enable</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>rstn</name>
								<bitRange>[3:3]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TTA_PLL_LOOP_CTRL</name>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TTA_PLL_DIV</name>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TTA_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TTA_PLL_ENABLE</name>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Enable</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Valid</name>
								<bitRange>[23:23]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TTA_PLL_SPARE_CTRL</name>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TTA_PLL_TMUX_SEL</name>
						<addressOffset>0x008C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TTA_PLL_STATUS1</name>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_0</name>
						<description>All 10 bit fields have reset value of 10'b10_0011_0100: 0 drive strenght 1 drive strenght 2 trigger 3 trigger 4 rate 5 output en(0) 6 hold 7 pull enable 8 pd(0)/pu(1) 9 input en(1)




</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x8C012003</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_0_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_0_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_0_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_0_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_0_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_0_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_0_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_0_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>PAD_1_drive_strength</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>PAD_1_trigger</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>PAD_1_rate</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>PAD_1_output_en</name>
								<description>0: Enable</description>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>PAD_1_hold</name>
								<bitRange>[16:16]</bitRange>
							</field>
							<field>
								<name>PAD_1_pull_enable</name>
								<bitRange>[17:17]</bitRange>
							</field>
							<field>
								<name>PAD_1_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[18:18]</bitRange>
							</field>
							<field>
								<name>PAD_1_input_en</name>
								<bitRange>[19:19]</bitRange>
							</field>
							<field>
								<name>PAD_2_drive_strength</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>PAD_2_trigger</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>PAD_2_rate</name>
								<bitRange>[24:24]</bitRange>
							</field>
							<field>
								<name>PAD_2_output_en</name>
								<description>0: Enable</description>
								<bitRange>[25:25]</bitRange>
							</field>
							<field>
								<name>PAD_2_hold</name>
								<bitRange>[26:26]</bitRange>
							</field>
							<field>
								<name>PAD_2_pull_enable</name>
								<bitRange>[27:27]</bitRange>
							</field>
							<field>
								<name>PAD_2_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[28:28]</bitRange>
							</field>
							<field>
								<name>PAD_2_input_en</name>
								<bitRange>[29:29]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_INTER_CLK_DIV</name>
						<description>Clock divider ratio for the 3 Interconnect modules
</description>
						<addressOffset>0x00CC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CFGICN_DIV</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>LPICN_DIV</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>HPICN_DIV</name>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_PERIPH_CLK_DIV</name>
						<addressOffset>0x00A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PERIPH_CLK_DIV</name>
								<bitRange>[9:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TTA_PLL_STATUS2</name>
						<addressOffset>0x00BC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TOPPERIPH_CLK_DIV</name>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TOPPERIPH_CLK_DIV</name>
								<description>Clock divider ratio for Top peripheral module
</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_SS_CLK_CTRL1</name>
						<description>Subsystem Clock selection. Bit definition for TTA, Ethernet, AI, HPC subsystems

*_CLK_CTRL Bitfield definitions
[bit]:[field]

0: sel_cka
1: force_cka
2: force_ckb
3: subsys_clkena
4: -
5: -
6: -
7: pll_ctrl_valid</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>tta_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>tta_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>tta_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>tta_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>tta_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[10:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[11:11]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[15:15]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[17:17]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[18:18]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[19:19]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[23:23]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>hpc_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[24:24]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>hpc_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[25:25]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>hpc_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[26:26]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>hpc_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[27:27]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>hpc_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_SS_CLK_CTRL2</name>
						<description>Subsystem Clock selection. Bit definition for MPC, Interconnect, C2C and CoreHW subsystems

*_CLK_CTRL Bitfield definitions
[bit]:[field]

0: sel_cka
1: force_cka
2: force_ckb
3: subsys_clkena
4: -
5: -
6: -
7: pll_ctrl_valid</description>
						<addressOffset>0x009C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>mpc_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>mpc_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>mpc_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>mpc_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>mpc_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[10:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[11:11]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[15:15]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[17:17]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[18:18]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[19:19]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[23:23]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corehw_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[24:24]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corehw_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[25:25]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corehw_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[26:26]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corehw_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[27:27]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corehw_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_SS_RESET_EN</name>
						<description>Assertion of the Subsystem bit, deasserts the reset to the corresponding subsystem. Bit definition is mentioned in adjoining table
</description>
						<addressOffset>0x00B0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pulpissimo</name>
								<description>Pulpissimo subsystem reset enable</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect</name>
								<description>interconnect subsystem reset enable</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_peripheral</name>
								<description>Top Peripheral reset enable</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c</name>
								<description>C2C reset enable</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corewHW</name>
								<description>coreHW reset enable</description>
								<bitRange>[12:12]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>TTA</name>
								<description>TTA Reset enable</description>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet</name>
								<description>Ethernet subsystem reset enable</description>
								<bitRange>[20:20]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI</name>
								<description>AI subsystem reset enable</description>
								<bitRange>[24:24]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>HPC</name>
								<description>HPC subsystem reset enable</description>
								<bitRange>[28:28]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_SS_CLK_EN</name>
						<description>Subsystem clock enable register</description>
						<addressOffset>0x00B4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pulpissimo</name>
								<description>Pulpissimo subsystem clock enable</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect</name>
								<description>interconnect subsystem clock enable</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_peripheral</name>
								<description>Top Peripheral subsystem clock enable</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c</name>
								<description>C2C  clock enable</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>coreHW</name>
								<description>coreHW subsystem clock enable</description>
								<bitRange>[12:12]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>TTA</name>
								<description>TTA subsystem clock enable</description>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet</name>
								<description>Ethernet subsystem clock enable</description>
								<bitRange>[20:20]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI</name>
								<description>AI subsystem clock enable</description>
								<bitRange>[24:24]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>HPC</name>
								<description>HPC subsystem clock enable</description>
								<bitRange>[28:28]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_SS_CLK_CTRL3</name>
						<description>Subsystem Clock selection. Bit definition for Top peripheral subsystem.

*_CLK_CTRL Bitfield definitions
[bit]:[field]

0: sel_cka
1: force_cka
2: force_ckb
3: subsys_clkena
4: -
5: -
6: -
7: pll_ctrl_valid</description>
						<addressOffset>0x00B8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>top_periph_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_periph_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_periph_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_periph_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_periph_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_SLOW_PULSE_DIV</name>
						<addressOffset>0x00A4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SLOW_PULSE_DIV</name>
								<bitRange>[9:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_2</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x8C012003</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_6_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_6_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_6_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_6_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_6_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_6_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_6_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_6_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>PAD_7_drive_strength</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>PAD_7_trigger</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>PAD_7_rate</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>PAD_7_output_en</name>
								<description>0: Enable</description>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>PAD_7_hold</name>
								<bitRange>[16:16]</bitRange>
							</field>
							<field>
								<name>PAD_7_pull_enable</name>
								<bitRange>[17:17]</bitRange>
							</field>
							<field>
								<name>PAD_7_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[18:18]</bitRange>
							</field>
							<field>
								<name>PAD_7_input_en</name>
								<bitRange>[19:19]</bitRange>
							</field>
							<field>
								<name>PAD_8_drive_strength</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>PAD_8_trigger</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>PAD_8_rate</name>
								<bitRange>[24:24]</bitRange>
							</field>
							<field>
								<name>PAD_8_output_en</name>
								<description>0: Enable</description>
								<bitRange>[25:25]</bitRange>
							</field>
							<field>
								<name>PAD_8_hold</name>
								<bitRange>[26:26]</bitRange>
							</field>
							<field>
								<name>PAD_8_pull_enable</name>
								<bitRange>[27:27]</bitRange>
							</field>
							<field>
								<name>PAD_8_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[28:28]</bitRange>
							</field>
							<field>
								<name>PAD_8_input_en</name>
								<bitRange>[29:29]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_3</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x8C012003</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_9_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_9_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_9_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_9_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_9_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_9_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_9_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_9_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>PAD_10_drive_strength</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>PAD_10_trigger</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>PAD_10_rate</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>PAD_10_output_en</name>
								<description>0: Enable</description>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>PAD_10_hold</name>
								<bitRange>[16:16]</bitRange>
							</field>
							<field>
								<name>PAD_10_pull_enable</name>
								<bitRange>[17:17]</bitRange>
							</field>
							<field>
								<name>PAD_10_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[18:18]</bitRange>
							</field>
							<field>
								<name>PAD_10_input_en</name>
								<bitRange>[19:19]</bitRange>
							</field>
							<field>
								<name>PAD_11_drive_strength</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>PAD_11_trigger</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>PAD_11_rate</name>
								<bitRange>[24:24]</bitRange>
							</field>
							<field>
								<name>PAD_11_output_en</name>
								<description>0: Enable</description>
								<bitRange>[25:25]</bitRange>
							</field>
							<field>
								<name>PAD_11_hold</name>
								<bitRange>[26:26]</bitRange>
							</field>
							<field>
								<name>PAD_11_pull_enable</name>
								<bitRange>[27:27]</bitRange>
							</field>
							<field>
								<name>PAD_11_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[28:28]</bitRange>
							</field>
							<field>
								<name>PAD_11_input_en</name>
								<bitRange>[29:29]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_5</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x00020034</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_15_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_15_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_15_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_15_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_15_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_15_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_15_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_15_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_4</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x8C012003</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_12_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_12_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_12_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_12_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_12_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_12_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_12_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_12_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>PAD_13_drive_strength</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>PAD_13_trigger</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>PAD_13_rate</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>PAD_13_output_en</name>
								<description>0: Enable</description>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>PAD_13_hold</name>
								<bitRange>[16:16]</bitRange>
							</field>
							<field>
								<name>PAD_13_pull_enable</name>
								<bitRange>[17:17]</bitRange>
							</field>
							<field>
								<name>PAD_13_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[18:18]</bitRange>
							</field>
							<field>
								<name>PAD_13_input_en</name>
								<bitRange>[19:19]</bitRange>
							</field>
							<field>
								<name>PAD_14_drive_strength</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>PAD_14_trigger</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>PAD_14_rate</name>
								<bitRange>[24:24]</bitRange>
							</field>
							<field>
								<name>PAD_14_output_en</name>
								<description>0: Enable</description>
								<bitRange>[25:25]</bitRange>
							</field>
							<field>
								<name>PAD_14_hold</name>
								<bitRange>[26:26]</bitRange>
							</field>
							<field>
								<name>PAD_14_pull_enable</name>
								<bitRange>[27:27]</bitRange>
							</field>
							<field>
								<name>PAD_14_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[28:28]</bitRange>
							</field>
							<field>
								<name>PAD_14_input_en</name>
								<bitRange>[29:29]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>ETH_PLL</name>
					<addressOffset>0x001040D0</addressOffset>
					<register>
						<name>REG_ETH_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_ETH_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_ETH_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_ETH_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_ETH_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_ETH_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_ETH_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_ETH_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>AI_PLL</name>
					<addressOffset>0x001040F0</addressOffset>
					<register>
						<name>REG_AI_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AI_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AI_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AI_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AI_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AI_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AI_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_AI_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>HPC_PLL</name>
					<addressOffset>0x00104110</addressOffset>
					<register>
						<name>REG_HPC_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_HPC_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_HPC_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_HPC_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_HPC_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_HPC_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_HPC_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_HPC_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>PULP_PLL</name>
					<addressOffset>0x00104130</addressOffset>
					<register>
						<name>REG_PULP_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_PULP_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_PULP_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_PULP_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_PULP_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_PULP_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_PULP_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_PULP_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>INTER_PLL</name>
					<addressOffset>0x00104150</addressOffset>
					<register>
						<name>REG_INTER_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_INTER_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_INTER_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_INTER_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_INTER_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_INTER_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_INTER_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_INTER_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>C2C_PLL</name>
					<addressOffset>0x00104170</addressOffset>
					<register>
						<name>REG_C2C_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_C2C_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_C2C_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_C2C_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_C2C_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_C2C_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_C2C_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_C2C_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>TOPPERIPH_PLL</name>
					<addressOffset>0x001041B0</addressOffset>
					<register>
						<name>REG_TOPPERIPH_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TOPPERIPH_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TOPPERIPH_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TOPPERIPH_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TOPPERIPH_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TOPPERIPH_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TOPPERIPH_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_TOPPERIPH_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>BootConfig</name>
					<addressOffset>0x001041D0</addressOffset>
					<register>
						<name>REG_BOOT_CFG</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_BOOT_CFG</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>REG_BOOT_STATUS</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_BOOT_STATUS</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
	</peripherals>
</device>
